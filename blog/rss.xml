<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Coopérative Code Commun Blog</title>
        <link>https://codecommun.coop/blog</link>
        <description>Coopérative Code Commun Blog</description>
        <lastBuildDate>Sun, 19 Nov 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>fr</language>
        <item>
            <title><![CDATA[Python - Comprehension Lists]]></title>
            <link>https://codecommun.coop/blog/python-comprehension-list</link>
            <guid>https://codecommun.coop/blog/python-comprehension-list</guid>
            <pubDate>Sun, 19 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Dans le top 10 des raisons d’aimer Python se hisse aisément les listes en intension, ou “comprehension lists”. Rappel du concept, et un petit tour complet de ce qu’on peut en faire.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="/img/blog/python-gen.jpg" src="/assets/images/python-gen-1cba56233b6b048e0eb35fad2b6a6c99.jpg" width="690" height="330" class="img_ev3q"></p><h1>Python - Comprehension Lists</h1><p>Dans le top 10 des raisons d’aimer Python se hisse aisément les listes en intension, ou “comprehension lists” pour les
gens branchés.</p><p>Rappel du concept, et un petit tour complet de ce qu’on peut en faire. Les connaisseurs attendront le
second article qui aborde des notions avancées, et contiendra quelques bonus.</p><p>On continue de ressusiter les articles de Sam et Max tout en se formant ? C'est parti !</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="la-boucle-for">La boucle for<a href="#la-boucle-for" class="hash-link" aria-label="Lien direct vers La boucle for" title="Lien direct vers La boucle for">​</a></h2><p>Disclaimer: pour comprendre ce petit gros article, il faut être à l’aise avec la boucle for et les listes.</p><p>En Python, on itère beaucoup, c’est à dire qu’on applique très souvent un traitement à tous les éléments d’une séquence,
un par un. Et pour ça il y a la boucle for:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># b</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># c</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et très souvent, on fait une nouvelle liste avec les éléments de la première liste, mais modifiés:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">new_sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    new_sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">new_sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ['A', 'B', 'C']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="les-listes-en-intension-la-base">Les listes en intension: la base<a href="#les-listes-en-intension-la-base" class="hash-link" aria-label="Lien direct vers Les listes en intension: la base" title="Lien direct vers Les listes en intension: la base">​</a></h2><p>Cette opération – prendre une séquence, modifier les éléments un par un, et faire une autre liste avec – est très
commune. Et comme pour à peu près tout ce qui est opération courante, Python possède une manière élégante de le faire
plus vite.</p><p>Reliez bien le bloc précédent, il devient:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">new_sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">new_sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ['A', 'B', 'C']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Il n’y a aucun mystère, ce code fait exactement la même chose, mais:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">new_sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    new_sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Est réduit à:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">new_sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ne cherchez pas un truc compliqué, c’est juste une question de syntaxe, ça fait la même chose, mais écrit différemment :
à droite, la boucle, à gauche, ce que l’on veut mettre dans la liste finale.</p><p>Et c’est surtout beaucoup plus court.</p><p>Là où ça devient franchement sympa, c’est que l’on peut assigner le résultat d’une liste en intension directement à la
variable originale:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">new_sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">new_sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ['A', 'B', 'C']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Devient alors:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"a"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"b"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"c"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">element</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">upper</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> element </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ['A', 'B', 'C']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et vous avez du coup un moyen très propre de transformer toute une liste.
Listes en intension avancées</p><p>On peut faire bien plus avec les listes en intension. Python est un langage dynamiquement typé, donc on peut transformer
carrément le type de liste.</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token builtin" style="color:rgb(189, 147, 249)">str</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ['1', '2', '3']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>On peut aussi faire des opérations un peu plus complexes:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'a'</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ['a', 'aa', 'aaa']</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et même construire des sequences imbriquées à la volée:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">list</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># petit rappel de l'usage de la fonction range</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 1, 2, 3, 4]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sequence </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">list</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [(1, [0]), (2, [0, 1]), (3, [0, 1, 2])]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># (3, [0, 1, 2])</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># 3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sequence</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 1, 2]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>La syntaxe <code>[expression for element in sequence]</code> autorise n’importe quelle expression, du coup on peut créer des listes
très élaborées, en utilisant tous les opérateurs mathématiques, logiques, etc, et toutes les fonctions que l’on veut.
Filtrer avec les listes en intension</p><p>Une autre opération courante consiste à filtrer la liste plutôt que de la transformer :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">nombres </span><span class="token operator">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">nombres_pairs </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> nombres</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> nombre </span><span class="token operator">%</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># garder uniquement les nombres pairs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        nombres_pairs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombres</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombres_pairs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 2, 4, 6, 8]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Évidement Python a également une syntaxe plus courte pour cela. Il suffit de rajouter la condition à la fin:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">nombres </span><span class="token operator">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> nombres </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> nombre </span><span class="token operator">%</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 2, 4, 6, 8]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Toutes les expressions habituellement utilisables pour tester une condition sont également disponibles.</p><p>Bien sûr, rien ne vous empêche de filtrer ET de transformer la liste en même temps. En clair, un nouvel arrivant à
Python fera ça:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">nombres </span><span class="token operator">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">sommes </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> nombres</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> nombre </span><span class="token operator">%</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        somme </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> i </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            somme </span><span class="token operator">+=</span><span class="token plain"> i</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        sommes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">somme</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sommes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 1, 6, 15, 28]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Un codeur qui trouve ses marques fera ça:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">sommes </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> nombre </span><span class="token operator">%</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        sommes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">append</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">sommes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># [0, 1, 6, 15, 28]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Un pythoniste affranchi ira droit au but:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token builtin" style="color:rgb(189, 147, 249)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">if</span><span class="token plain"> nombre </span><span class="token operator">%</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Bon, en vérité il fera plutôt:</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token builtin" style="color:rgb(189, 147, 249)">sum</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nombre</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nombre </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Mais c’était pour l’exemple :-)</p><p>Les listes en intension ont encore plus à offrir, la suite au prochain article !</p>]]></content:encoded>
            <category>python</category>
            <category>dev</category>
            <category>compli</category>
            <category>comprehension list</category>
            <category>listes en intention</category>
            <category>sam et max</category>
        </item>
        <item>
            <title><![CDATA[Python - L’unpacking]]></title>
            <link>https://codecommun.coop/blog/python-unpacking</link>
            <guid>https://codecommun.coop/blog/python-unpacking</guid>
            <pubDate>Sat, 11 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Une fonctionalité typiquement pythonienne qui permet d’augmenter drastiquement la lisibilité des programmes.]]></description>
            <content:encoded><![CDATA[<p>Il y a un blog que j'aimais farfouiller de temps en temps lors de mes débuts en python : Celui de Sam &amp; Max, disparu
aujourd'hui et plus accessible. Je me permets de resortir quelques archives qui m'ont aidé à l'époque, et qui pourront
très probablement vous aider à votre tour.</p><h1>L’unpacking</h1><p>Dans ce premier d'une, je l'espère, longue série d'articles sur python, parlons d'une des 5 choses
obligatoire à apprendre en python d'après feu le bog Sam&amp;Max.</p><p>L’unpacking est une fonctionalité typiquement pythonienne qui permet de prendre un itérable (souvent un tuple), et
de mettre ses éléments dans des variables d’une traite.</p><p>Cela permet d’augmenter drastiquement la lisibilité des programmes. Et chez Code Commun, on aime tout ce qui peut aider
à rendre nos logiciels libre plus lisible.</p><p><img loading="lazy" alt="/img/blog/python-unboxing.jpg" src="/assets/images/python-unboxing-2eb35c998387fc40ea74d9b85af3ac54.jpg" width="512" height="512" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="le-principe-de-base">Le principe de base<a href="#le-principe-de-base" class="hash-link" aria-label="Lien direct vers Le principe de base" title="Lien direct vers Le principe de base">​</a></h2><p>Normalement, si vous voulez mettre le contenu d’un tuple dans des variables, vous devez procéder ainsi :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> ducks </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'fifi'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'loulou'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duck1 </span><span class="token operator">=</span><span class="token plain"> ducks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duck2 </span><span class="token operator">=</span><span class="token plain"> ducks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duck3 </span><span class="token operator">=</span><span class="token plain"> ducks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duck1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duck2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'fifi'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duck3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'loulou'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>L’unpacking, qu’on pourrait traduire par le terme fort moche de “déballage”, dans le sens “ouvrir un colis”, permet de
faire la même chose, bien plus facilement :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duck1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> duck2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> duck3 </span><span class="token operator">=</span><span class="token plain"> ducks</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duck1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duck2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'fifi'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duck3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'loulou'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Il n’y a rien à faire, c’est automatique. La seule condition est que le nombre de variables à gauche du signe égal soit
le même que le nombre d’éléments dans la collection de droite.</p><p>D’ailleurs, ça marche même avec un seul élément :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> ducks </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duck1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> ducks </span><span class="token comment" style="color:rgb(98, 114, 164)"># notez la virgule</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duck1</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et ça marche avec n’importe quel itérable, pas uniquement les tuples. Avec une liste, une string, un générateur…</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> d </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> c</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"12"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">yolo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">yield</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"leroy"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">yield</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"jenkins"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> nom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> prenom </span><span class="token operator">=</span><span class="token plain"> yolo</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> nom</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'leroy'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> prenom</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'jenkins'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ça marche bien entendu avec un dico ou un set, mais comme ils ne sont pas ordonnés, c’est pas très utile.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="astuces-autour-de-lunpacking">Astuces autour de l’unpacking<a href="#astuces-autour-de-lunpacking" class="hash-link" aria-label="Lien direct vers Astuces autour de l’unpacking" title="Lien direct vers Astuces autour de l’unpacking">​</a></h2><p>On peut utiliser l’unpacking dans des endroits inattendus. Par exemple, pour échanger la valeur de deux variables :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> a </span><span class="token comment" style="color:rgb(98, 114, 164)"># les parenthèses sont facultatives dans les tuples</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Puisqu’on est dans les tuples sans parenthèses, on peut retourner un tuple et donner l’illusion de retourner plusieurs variables :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">duckmebaby</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"rifi"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'filou'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'louri'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> et</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> hop</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> la </span><span class="token operator">=</span><span class="token plain"> duckmebaby</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> et</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'rifi'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> hop</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'filou'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> la</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'louri'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="allons-plus-loin">Allons plus loin.<a href="#allons-plus-loin" class="hash-link" aria-label="Lien direct vers Allons plus loin." title="Lien direct vers Allons plus loin.">​</a></h2><p>On peut utiliser l’unpacking à l’intérieur d’une boucle for. Souvenez vous que les itérables peuvent contenir d’autres itérables. Par exemple, j’ai une liste qui contient 3 tuples, chaque tuple contient deux éléments :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> scores </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Monique'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'David'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Dick'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> score </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> scores</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">score</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Monique'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'David'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Dick'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Si je veux afficher le nom et le score l’un en dessous de l’autre :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nom_et_score </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> scores</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nom_et_score</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nom_et_score</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Monique</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">David</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Dick</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Je peux appliquer l’unpacking dans la boucle pour rendre cette opération plus élégante :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> score </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> scores</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">score</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Monique</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">David</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Dick</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Cela marche avec des itérables plus gros, bien entendu. C’est aussi particulièrement utile avec des dictionnaires car on peut les transformer en itérable de tuples :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> scores </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">'Monique'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'David'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Dick'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> scores</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Monique'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'3'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> scores</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># transformation !</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dict_items</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Monique'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'David'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Dick'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> nom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> score </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> scores</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">nom</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">score</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Monique</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">David</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">10</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Dick</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Tout aussi utile, mais plus compliqué, est l’usage de l’unpacking dans l’appel de fonction. Pour cela, on utilise l’opérateur splat, l’étoile en Python.</p><p>Soit une fonction qui additionne des nombres :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">     </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> b </span><span class="token operator">+</span><span class="token plain"> c</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">6</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Oui, imaginons que je suis complètement débile, et que j’ai cette fonction pérave dans mon code. Vous noterez dans les articles que je l’utilise souvent sur le blog. C’est la fonction fourre tout pour expliquer un truc quand j’ai pas d’idée.</p><p>Maintenant, imaginez que je veuille additionner des canards. Si, ça marche en Python :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'fifi'</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'loulou'</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># what the duck ?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'rirififiloulou'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Maintenant je me refais mon tuples de canards :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># nous entrerons dans la bande à picsou, youhou</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> duckyou </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'fifi'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'loulou'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Si je veux utiliser ma fonction pourrie pour mon use case stupide, je ferai ceci :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duckyou</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> duckyou</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> duckyou</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'rirififiloulou'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Voilà une perte de productivité intolérable, c’est pas comme ça qu’on va faire fructifier son sou fétiche.</p><p>On peut forcer l’unpacking avec l’étoile :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">*</span><span class="token plain">duckyou</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'rirififiloulou'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Si on oublie l’étoile, le premier paramètre reçoit tout le tuple, et les autres paramètres rien :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">duckyou</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Traceback </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">most recent call last</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  File </span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> line </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TypeError</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> missing </span><span class="token number">2</span><span class="token plain"> required positional arguments</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'b'</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">and</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'c'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Les fonctions ont même le droit à un bonus car on peut unpacker des dictionnaires en utilisant la double étoile. Ca ne marche qu’avec les fonctions, et ça va déballer le dico pour que chaque paire clé/valeur soit passée comme nom et valeur de l’argument :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">arg1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> arg2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">arg1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">arg2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">arg1</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Je suis la valeur 1"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> arg2</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Je m'en branle de qui tu es"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Je suis la valeur </span><span class="token number">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Je m'en branle de qui tu es</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> dicocorico </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">'arg1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'cotcot'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'arg2'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ouai je pête un cable, l\'avion me soule'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">**</span><span class="token plain">dicocorico</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cotcot</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ouai je pête un cable</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> l'avion me soule</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Quand on unpacke des paramètres, il faut s’assurer que le nombre d’arguments passé n’est pas supérieur à ceux existant, sinon ça plante :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> dicocorico </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">'arg1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'cocot'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'arg2'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ouai je pête un cable, l\'avion me soule'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'dang'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'je suis en trop et ça fait chier tout le monde'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">**</span><span class="token plain">dicocorico</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Traceback </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">most recent call last</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  File </span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> line </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">**</span><span class="token plain">dicocorico</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TypeError</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> got an unexpected keyword argument </span><span class="token string" style="color:rgb(255, 121, 198)">'dang'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> stuplet </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">*</span><span class="token plain">stuplet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Traceback </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">most recent call last</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  File </span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> line </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">*</span><span class="token plain">stuplet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">TypeError</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> pas_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> takes </span><span class="token number">2</span><span class="token plain"> positional arguments but </span><span class="token number">3</span><span class="token plain"> were given</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Par contre, rien ne vous empêche de fournir moins d’arguments et de remplir les autres à la main :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">encore_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> d</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> b </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number">0</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> c </span><span class="token operator">+</span><span class="token plain"> d </span><span class="token comment" style="color:rgb(98, 114, 164)"># je feinte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> encore_add</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain">stuplet</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">16</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et on peut bien entendu faire le mega mix. Par exemple, prenons la fonction print, dont la signature accepte une infinité d’arguments positionnels et quelques arguments nommés :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> sep</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">' '</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> end</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'\n'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">file</span><span class="token operator">=</span><span class="token plain">sys</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">stdout</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> flush</span><span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Aller, on va lui unpacker sa mère :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> ducks </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'riri'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'fifi'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'loulou'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># is this duck typing ?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> keywords </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">'sep'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">' / '</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"end"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">" : vous êtes du coin ? \n"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'picsou'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain">ducks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">**</span><span class="token plain">keywords</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">picsou </span><span class="token operator">/</span><span class="token plain"> riri </span><span class="token operator">/</span><span class="token plain"> fifi </span><span class="token operator">/</span><span class="token plain"> loulou </span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> vous êtes du coin ?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ça c’est fait.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="python-3-cest-du-chocolat">Python 3, c’est du chocolat<a href="#python-3-cest-du-chocolat" class="hash-link" aria-label="Lien direct vers Python 3, c’est du chocolat" title="Lien direct vers Python 3, c’est du chocolat">​</a></h2><p>En Python 3, l’unpacking a été amélioré, et on peut maintenant faire de l’unpacking partiel :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># exemple 100% repompé d'un autre article du blog. Duck it.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> l </span><span class="token operator">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">list</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token builtin" style="color:rgb(189, 147, 249)">range</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> l</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain">b </span><span class="token operator">=</span><span class="token plain"> l</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain">b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> c </span><span class="token operator">=</span><span class="token plain"> l</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> a</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> b</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token number">3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> c</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token number">4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ce qui peut être très pratique sur les longs itérables. Comment obtenir la dernière ligne d’un fichier ?</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain">contenu</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> dernire_ligne </span><span class="token operator">=</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(189, 147, 249)">open</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'/etc/fstab'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> dernire_ligne</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token string" style="color:rgb(255, 121, 198)">'UUID=0e8c3132-8fa2-46d5-a541-2890db9b371f none            swap    sw              0       0\n'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ou alors, dans une boucle :</p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> initiale</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain">reste </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> ducks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">initiale</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">r</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">f</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">l</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>python</category>
            <category>dev</category>
            <category>unpacking</category>
            <category>sam et max</category>
        </item>
        <item>
            <title><![CDATA[Certificats TLS wildcard avec Letsencrypt, Docker, Traefik via OVH Cloud et Gandi.net]]></title>
            <link>https://codecommun.coop/blog/sysadmin-mon-chaton-part2</link>
            <guid>https://codecommun.coop/blog/sysadmin-mon-chaton-part2</guid>
            <pubDate>Wed, 08 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Soyez sauvage; créez et utilisez des certificats wildcard avec Letsencrypt, Docker, Traefik avec OVH et Gandi.net. Graou !]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="/img/blog/sauvage.jpg" src="/assets/images/sauvage-bdca871ed181cf44e12a51620a5858dc.jpg" width="672" height="384" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="vous-avez-dit-sauvage-">Vous avez dit sauvage ?<a href="#vous-avez-dit-sauvage-" class="hash-link" aria-label="Lien direct vers Vous avez dit sauvage ?" title="Lien direct vers Vous avez dit sauvage ?">​</a></h2><p>Un certificat "wildcard" C'est un certificat qui répond à tous les sous-domaines d'un domaine. Par exemple,
si vous avez un certificat wildcard pour le domaine <code>*.example.com</code>, il sera valide
pour <code>foo.example.com</code>, <code>bar.example.com</code>, <code>prout.example.com</code>, etc.</p><p>Vous voyez le <code>*</code> ? C'est un caractère joker, qui signifie "n'importe quoi". C'est pour cela qu'on appelle ça un
certificat wildcard, un sauvage.</p><p>Pourquoi faire ? Ben c'est quand même 'achement pratique si on doit générer des sites en mode Saas, software as a
service. TiBillet, par exemple, est construit en mode multi-tenant. Cela veut dire un noyau unique pour plusieurs
instances fédérées. Chaque instance est un tenant, et chaque tenant possède son propre sous-domaine.</p><p>Dans le cas d'un déploiement en mode "logiciel à la demande", c'est à dire avec des instances créées automatiquement en
quelques clics, avoir
un seul certificat valide pour les adresses comme <a href="https://raffinerie.tibillet.re/" target="_blank" rel="noopener noreferrer">https//raffinerie.tibillet.re/</a>
ou <a href="https://rezom.tibillet.re/" target="_blank" rel="noopener noreferrer">https://rezom.tibillet.re/</a> (notez le s de https),
c'est quand même assez chouette, non ?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="lets-encrypt-et-traefik-lultra-combo">Let's Encrypt et Traefik, l'ultra combo.<a href="#lets-encrypt-et-traefik-lultra-combo" class="hash-link" aria-label="Lien direct vers Let's Encrypt et Traefik, l'ultra combo." title="Lien direct vers Let's Encrypt et Traefik, l'ultra combo.">​</a></h2><p>Pour convaincre Letsencrypt de nous donner un certificat wildcard, il faut faire un petit peu plus de chose que pour un
certificat simple.
En plus de lui prouver que nous avons bien la main sur le serveur qui répond à l'ip résolu par le nom de domaine, il
faut ausi lui prouver que nous sommes les proprietaires de la totalité du domaine. Autrement dit : que nous avons les
droits d'écritures de toute la zone DNS.</p><p>Pour cela, Letsencrypt va nous demander d'ajouter un champ TXT dans la zone DNS du domaine. Ce champ contient une clé
créé par Letsencrypt, s'il arrive à le lire, il va donc considérer à raison que nous avons bien les droits d'écriture
sur la zone DNS. Donc que nous sommes le proprio.</p><p>Le truc, c'est qu'un certificat doit se renouveller régulièrement, et que donc, il faut que ce champ TXT soit présent et
différent à chaque renouvellement. Et on va pas se le cacher, c'est un peu contraignant et fastidieux de le faire à la
main.</p><p>C'est la qu'intervient Traefik. Traefik est un reverse proxy, c'est à dire un serveur qui va rediriger les requêtes http
vers le bon conteneur docker. Il est capable de faire plein de choses, mais ce qui nous intéresse ici, c'est qu'il est
capable de gérer les certificats SSL, et même de renouveller automatiquement les widlcards.</p><p>Traefik et Letsencrypt fonctionnent merveilleusement bien ensemble. Le premier va poser la question au second, puis va
modifier la zone DNS automatiquement pour que le champs TXT soit à jour régulièrement.
Cela nécessite de donner les trois d'écriture à notre Zone à notre conteneur Traefik.
Pas de soucis particuliers, l'instance Traefik est hebergé sur notre serveur, nous avons donc la main dessus..</p><p>Voyons comment mettre tout ça en place.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="prérequis">Prérequis<a href="#prérequis" class="hash-link" aria-label="Lien direct vers Prérequis" title="Lien direct vers Prérequis">​</a></h2><ul><li>Un nom de domaine : Ici, nous allons voir la methode avec Gandi et avec OVH</li><li>Docker ( et docker-compose ) : <a href="https://docs.docker.com/install/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/install/</a></li><li>Traefik : <a href="https://docs.traefik.io/" target="_blank" rel="noopener noreferrer">https://docs.traefik.io/</a><ul><li>Nous avons un dépot avec tout dedans : <a href="https://github.com/TiBillet/" target="_blank" rel="noopener noreferrer">https://github.com/TiBillet/</a></li></ul></li><li>Un serveur ou heberger tout ça avec une ip statique et les ports 80 et 433 corectement redirigé. On utilise des VPS
sous Ubuntu, mais ça marche aussi avec une autre distribution ou même un raspberry pi.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="installation">Installation<a href="#installation" class="hash-link" aria-label="Lien direct vers Installation" title="Lien direct vers Installation">​</a></h2><p>Je vous invite à aller du coté d'une précédente note de blog qui détaille comment préparer votre serveur pour la suite :
<a href="https://codecommun.coop/blog/sysadmin-mon-chaton-part1/" target="_blank" rel="noopener noreferrer">https://codecommun.coop/blog/sysadmin-mon-chaton-part1/</a></p><p>Une légère différence ceci, nous allons utiliser le fichier docker-compose.yml du dossier "wildcard" de notre dépot
github Traefik : <a href="https://github.com/TiBillet/Traefik-reverse-proxy/tree/main/wildcard" target="_blank" rel="noopener noreferrer">https://github.com/TiBillet/Traefik-reverse-proxy/tree/main/wildcard</a></p><p>Si vous avez déja lancé le docker-compose.yml de la note de blog, vous pouvez le stopper et le supprimer et utiliser
celui-ci à la place.</p><p>Si vous n'avez de compte ni sous OVH ni chez Gandi, pas d'inquiétude, Traefik supporte beaucoup de
registrar : <a href="https://doc.traefik.io/traefik/https/acme/?ref=j.hommet.net#dnschallenge" target="_blank" rel="noopener noreferrer">https://doc.traefik.io/traefik/https/acme/?ref=j.hommet.net#dnschallenge</a></p><p>Commençons par créer un nouveau champ A vers l'ip de votre serveur, avec comme sous domaine <code>*</code>.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">* </span><span class="token number">10800</span><span class="token plain"> IN A </span><span class="token operator">&lt;</span><span class="token plain">IP</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ensuite, allons générer une clé API pour donner les droits d'écriture dans cette zone à Traefik : </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="avec-ovh-cloud">Avec OVH Cloud<a href="#avec-ovh-cloud" class="hash-link" aria-label="Lien direct vers Avec OVH Cloud" title="Lien direct vers Avec OVH Cloud">​</a></h2><p>Comme nous le disions, nous allons avoir besoin de donner les droits d'écriture à Traefik. Il vous faut bien sur un
compte ovh valide et avoir acheté un nom de domaine.</p><ul><li><p>Allez sur <a href="https://eu.api.ovh.com/createApp/" target="_blank" rel="noopener noreferrer">https://eu.api.ovh.com/createApp/</a></p></li><li><p>Logguez vous, créez une nouvelle app et récuperez les cred'</p></li><li><p>Dans le même dossier que le docker-compose, Créez un fichier .env et remplissez les deux premières variables avec les
cred' récupérés précédemment.</p></li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">OVH_APPLICATION_KEY</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">OVH_APPLICATION_SECRET</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">""</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">OVH_CONSUMER_KEY</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">""</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>Lancez cette commande curl pour donner les droits de modification à l'application. Remplacez OVH_APPLICATION_KEY
et VOTRE_DNS, avec vos propres valeurs.</li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -XPOST -H</span><span class="token string" style="color:rgb(255, 121, 198)">"X-Ovh-Application: &lt;OVH_APPLICATION_KEY&gt;"</span><span class="token plain"> -H </span><span class="token string" style="color:rgb(255, 121, 198)">"Content-type: application/json"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">https://eu.api.ovh.com/1.0/auth/credential  -d </span><span class="token string" style="color:rgb(255, 121, 198)">'{</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "accessRules": [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "method": "POST",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "path": "/domain/zone/&lt;VOTRE_DNS&gt;/record"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "method": "POST",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "path": "/domain/zone/&lt;VOTRE_DNS&gt;/refresh"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        },</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "method": "DELETE",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">            "path": "/domain/zone/&lt;VOTRE_DNS&gt;/record/*"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    ],</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">    "redirection":"https://www.&lt;VOTRE_DNS&gt;/"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Si vous n'avez pas curl, installez le. Sinon, vous pouvez aussi utiliser l'application en ligne de OVH. Je vous laisse
découvrir par vous-même.</p><ul><li>Copiez le consumer_key et rentrez la variable correspondante dans le .env</li><li>Validez la requete avec le lien envoyé dans la réponse. Pensez à mettre unlimited dans la durée des droits d'execution
car Traefik renouvelle le widlcard tous les trois mois.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="avec-gandinet">Avec Gandi.net<a href="#avec-gandinet" class="hash-link" aria-label="Lien direct vers Avec Gandi.net" title="Lien direct vers Avec Gandi.net">​</a></h2><p>Un ptit peu plus simple du coté de Gandi, il suffit de générer une clé API dans votre compte user / Authentication
option / API key.</p><p>Dans votre .env, ajoutez la variable suivante :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">GANDI_API_KEY</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"PLOUFPLOUFDEVINEMOI"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="décollage">Décollage<a href="#décollage" class="hash-link" aria-label="Lien direct vers Décollage" title="Lien direct vers Décollage">​</a></h2><p>Completez votre .env avec EMAIL et DOMAIN, paske c'est le votre et pas le mien :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DOMAIN</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"pingoin-sauvage.coop"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">EMAIL</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"tux42@pingoin-sauvage.coop"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et voici le compose magique :</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token key atrule">version</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">traefik</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"traefik:saintmarcelin"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">container_name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"traefik_wild"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">restart</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> always</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">command</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">log.level=DEBUG</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">api.insecure=true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">providers.docker=true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">providers.docker.exposedbydefault=false</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.web.address=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token number">80</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.web.http.redirections.entrypoint.to=websecure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.web.http.redirections.entrypoint.scheme=https</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.websecure.address=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token number">443</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.websecure.http.tls=true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.websecure.http.tls.certResolver=letsencrypt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.websecure.http.tls.domains</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">.main=$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">DOMAIN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">entrypoints.websecure.http.tls.domains</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">.sans=</span><span class="token important">*.$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">DOMAIN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.dnschallenge=true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gandiv5</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.dnschallenge.delayBeforeCheck=60</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesResolvers.letsencrypt.acme.dnsChallenge.resolvers=1.1.1.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token number">53</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">8.8.8.8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token number">53</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.email=$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">EMAIL</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.storage=/dnschallenge/acme.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.caserver=https</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">//acme</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">staging</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">v02.api.letsencrypt.org/directory</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">ports</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"80:80"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"443:443"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">environment</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># choisissez votre provider. Gardez ceux de Gandi, ou ceux d'ovh, ou ceux indiqué par la doc Traefik.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"GANDIV5_API_KEY=${GANDIV5_API_KEY}"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> OVH_APPLICATION_KEY=$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">OVH_APPLICATION_KEY</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> OVH_APPLICATION_SECRET=$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">OVH_APPLICATION_SECRET</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> OVH_CONSUMER_KEY=$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">OVH_CONSUMER_KEY</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">volumes</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"./dnschallenge:/dnschallenge"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"/var/run/docker.sock:/var/run/docker.sock:ro"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">networks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">networks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">frontend</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">external</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Attention ! Deux choses à noter :</p><p>Pour gandi, ne touchez pas la ligne suivante :</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.dnschallenge.provider=gandiv5</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Pour OVH, ou pour un autre registrar, il faudra bien le changer :</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">certificatesresolvers.letsencrypt.acme.dnschallenge.provider=ovh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cest-parti-">C'est parti !<a href="#cest-parti-" class="hash-link" aria-label="Lien direct vers C'est parti !" title="Lien direct vers C'est parti !">​</a></h2><div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># On lance le conteneur</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker compose up -d</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># on check les logs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">docker logs -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Attendez quelques instants que les logs se calment, et allons tester tout ceci avec un conteneur de test.</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">version</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">services</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">whoami</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"traefik/whoami"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">container_name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"simple-service"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">labels</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.enable=true</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.docker.network=frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.http.routers.whoami.tls.certresolver=letsencrypt</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.http.routers.whoami.tls.domains</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">.main=$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">DOMAIN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.http.routers.whoami.tls.domains</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">.sans=</span><span class="token important">*.$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">DOMAIN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.http.routers.whoami.rule=HostRegexp(`</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">sub</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">a</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">zA</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">Z0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain">9</span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain">+</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain">.$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">DOMAIN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain">`) </span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token punctuation" style="color:rgb(248, 248, 242)">|</span><span class="token plain"> Host(`$</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">DOMAIN</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain">`)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> traefik.http.routers.whoami.entrypoints=websecure</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">networks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">-</span><span class="token plain"> frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token key atrule">networks</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token key atrule">frontend</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token key atrule">external</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token boolean important">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notez la regex sur la règle DNS. Elle permet de matcher tous les sous-domaines de votre domaine. Sexy isn't it ?</p><p>Si tout ce passe bien, dans les logs de Traefik, vous devriez voir quelque chose comme ça :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"> traefik_wild  </span><span class="token operator">|</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">time</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"2023-11-08T16:40:36Z"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">level</span><span class="token operator">=</span><span class="token plain">debug </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">msg</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"legolog: [INFO] [tibillet.coop] Server responded with a certificate."</span><span class="token plain">                                                            traefik_wild  </span><span class="token operator">|</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">time</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"2023-11-08T16:40:36Z"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">level</span><span class="token operator">=</span><span class="token plain">debug </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">msg</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"Certificates obtained for domains [tibillet.coop *.tibillet.coop]"</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">providerName</span><span class="token operator">=</span><span class="token plain">letsencrypt.acme ACME </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CA</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">"https://acme-v02.api.le</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token string" style="color:rgb(255, 121, 198)">tsencrypt.org/directory"</span><span class="token plain">             </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Si non, remontez bien les logs, le problème est forcément indiqué dedans.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="en-production-">En production ?<a href="#en-production-" class="hash-link" aria-label="Lien direct vers En production ?" title="Lien direct vers En production ?">​</a></h2><p>Ahah ! Par ce que vous pensiez que c'était fini ?</p><p>Le compose de Traefik contien une petite astuce, nous avons utilisé le serveur de test de Letsencrypt.
Pourquoi ? Eh bien le serveur de production qui génère de vrais certificats est soumis à une limite du nombre de
demande.</p><p>Je l'ai découvert à mes dépens, en voulant tester un peu trop de fois mon système, j'ai dû attendre quelques heures pour
pouvoir relancer un nouveau certificat... Le serveur de test nous permet par contre de se planter sans limite. J'adore.</p><p>Pour passer en production, lorsque les logs du conteneur traefik vous indiqueront que tout roule, il suffit de commenter
la ligne suivante :</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">#      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Et hop, relancer en mode daemon :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> compose up -d</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Enfin, re-lancez le conteneur whoami et vérifier qu'il matche bien. Remplacez bien sur le DNS par le votre, lancez le
conteneur, et allez vérifier sur votre navigateur que le certificat
est valide pour tout les sous-domaines que vous souhaitez (https://patate.votre_dns , https://prout.votre_dns, etc...)</p><p>Si ça coince, rechargez, videz vos certifs auto générés, et enfin regardez les logs Traefik, ce dernier vous signalera
forcement le problème dans un message d'erreur.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sources-et-liens-utiles-">Sources et liens utiles :<a href="#sources-et-liens-utiles-" class="hash-link" aria-label="Lien direct vers Sources et liens utiles :" title="Lien direct vers Sources et liens utiles :">​</a></h2><ul><li><a href="https://doc.traefik.io/traefik/user-guides/docker-compose/acme-dns/" target="_blank" rel="noopener noreferrer">https://doc.traefik.io/traefik/user-guides/docker-compose/acme-dns/</a></li><li><a href="https://www.grottedubarbu.fr/traefik-dns-challenge-ovh/" target="_blank" rel="noopener noreferrer">https://www.grottedubarbu.fr/traefik-dns-challenge-ovh/</a></li><li><a href="https://j.hommet.net/traefik-certificat-ssl-wildcard-letsencrypt/" target="_blank" rel="noopener noreferrer">https://j.hommet.net/traefik-certificat-ssl-wildcard-letsencrypt/</a></li></ul>]]></content:encoded>
            <category>ubuntu</category>
            <category>linux</category>
            <category>wallet</category>
            <category>traefik</category>
            <category>crowsec</category>
            <category>administration systeme</category>
            <category>sysadmin</category>
            <category>ovh</category>
            <category>wildcard</category>
            <category>letsencrypt</category>
            <category>gandi</category>
        </item>
        <item>
            <title><![CDATA[Codons le logiciel de caisse enregistreuse "LaBoutik" depuis zero]]></title>
            <link>https://codecommun.coop/blog/codensamb-preambule</link>
            <guid>https://codecommun.coop/blog/codensamb-preambule</guid>
            <pubDate>Thu, 26 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Ça sert a rien de faire du logiciel libre si on explique pas pourquoi et comment.Venez contribuer quelque que soit votre domaine de connaissance .]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="préambule">Préambule<a href="#préambule" class="hash-link" aria-label="Lien direct vers Préambule" title="Lien direct vers Préambule">​</a></h2><p>Dans la Coop', on pense que ça ne sert à rien de faire du logiciel libre si on explique pas pourquoi et comment. Donc premier effort à fournir : de la documentation et de la vulgarisation.</p><p>On commence par un chantier participatif ? Tous les lundi : cod' ensamb !</p><p>L'idée : Recoder tout le projet LaBoutik (Caisse enregistreuse, cashless, monnaie locale, etc... pour en savoir plus : <a href="https://tibillet.org" target="_blank" rel="noopener noreferrer">https://tibillet.org</a>).</p><p>Étape par étape, comme un grand tutoriel géant, nous allons détailler pourquoi et comment nous le construisons.</p><p>Le but avoué est d'encourager les contributions aux projets de la coopérative, de réduire le flou technologique, de vulgariser le code, mais surtout de s'engager dans une démarche de partage de savoir.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="koi-fé--tldr">Koi fé ? (TLDR;)<a href="#koi-fé--tldr" class="hash-link" aria-label="Lien direct vers Koi fé ? (TLDR;)" title="Lien direct vers Koi fé ? (TLDR;)">​</a></h2><p>Dans ce tuto, nous allons voir comment : </p><ul><li>Préparer son environnement de développement python avec Poetry </li><li>Configurer l'IDE de Jetbrain, Pycharm, pour qu'il nous facilite la vie </li><li>Installer Django 4.2</li><li>Créer ses premiers objets en base de donnée</li><li>Créer une interface d'admin pour les créer et les manipuler</li></ul><h1>Codons le logiciel de caisse enregistreuse "LaBoutik" depuis zero</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="la-stack-">La "stack" :<a href="#la-stack-" class="hash-link" aria-label="Lien direct vers La &quot;stack&quot; :" title="Lien direct vers La &quot;stack&quot; :">​</a></h3><p>Autrement dit, l'ensemble des librairies, framework (cadriciel) et outils divers pour construire notre solution.</p><ul><li>Linux (ubuntu/debian) quoique, on pourrait installer la stack sur windows et mac, mais on va le faire paske faut bien choisir.</li><li>Python 3.10</li><li>Poetry (outil de gestion d'environement python qui sert à maintenir nos versions à jour et nous assurer que les librairies n'aient pas d'incompatibilité entre elles )</li><li>Django 4.2</li></ul><p>Et bien sur notre IDE préféré qui nous facilite grandement la tache : Pycharm (<a href="https://www.jetbrains.com/fr-fr/pycharm/" target="_blank" rel="noopener noreferrer">https://www.jetbrains.com/fr-fr/pycharm/</a>)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="le-dépot-git">Le dépot GIT<a href="#le-dépot-git" class="hash-link" aria-label="Lien direct vers Le dépot GIT" title="Lien direct vers Le dépot GIT">​</a></h3><p>Travaillons sur le dépot : <a href="https://github.com/CoopCodeCommun/LaBoutik-CodEnsamb" target="_blank" rel="noopener noreferrer">https://github.com/CoopCodeCommun/LaBoutik-CodEnsamb</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="installons-poetry">Installons Poetry<a href="#installons-poetry" class="hash-link" aria-label="Lien direct vers Installons Poetry" title="Lien direct vers Installons Poetry">​</a></h2><ul><li><a href="https://python-poetry.org/docs/" target="_blank" rel="noopener noreferrer">https://python-poetry.org/docs/</a></li></ul><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">curl -sSL https://install.python-poetry.org | python3 -</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">git clone git@github.com:CoopCodeCommun/LaBoutik-CodEnsamb.git</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">### Sur Mac :</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">brew install poetry</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Une fois le poetry installé et le repos git crée. On peut initialiser le poetry.
A La racine du projet : </p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">poetry init</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Répondez aux questions en vérifiant<br>
<em>Compatible Python versions <sup id="fnref-3.10-a7a1d5"><a href="#fn-3.10-a7a1d5" class="footnote-ref">3.10</a></sup> :</em> laissez par defaut .
<em>Pour les question concernant les dépendances , répondez</em> No ( nous les installerons nous meme )</p><p>Vous avez maintenant un fichier <strong>pyproject.toml</strong> dans  votre projet qui reprend tous les paramétres saisis .
Ouvrez ce fichier , vous pouvez ici entrer les dépendances que vous sohaitez dans la section <em>[tool.poetry.dependencies]</em>:
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_b663a13e2226de8c483a1b4e9b747fef.png" class="img_ev3q"></p><p>Le <em>^</em> indique version minimun
Nous allons ajouter Django en ligne de commande en figeant la version à l'aide de <em>@</em> ( à ce jour Octobre 2023 la version stable est : 4.2) : </p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">poetry add django@4.2</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Ce qui à pour effet d'installer aussi les dépendances necessaires pour le projet et de créer le fichier <em>poetry.lock</em> qui est l'état actuel de notre projet .</p><blockquote><p>Si vous avez cloné le projet , les 2 premières étapes <code>poetry init</code> et <code>poetry add django@4.2</code>ne seront pas necessaire .( elles le sont uniquement si vous partez de zéro * ) </p></blockquote><p>Maintenant entrons et travaillons dans l'environement virtuel qui nous permet d'avoir le meme environement de travail quelque soit l' OS utilisé : </p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">poetry shell</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="installons-et-configurons-django">Installons et configurons Django<a href="#installons-et-configurons-django" class="hash-link" aria-label="Lien direct vers Installons et configurons Django" title="Lien direct vers Installons et configurons Django">​</a></h2><p>Créons le projet (l'application)</p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">    django-admin startproject laboutik .</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    // le point '.' est utilisé pour que la racine du project soit dans le dossier dont on est situé</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ./manage.py startapp labutik_core</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>idem( * ) les 2 premières commande ci dessus ne sont plus necessaires si vous avez cloné le projet .</p><p>Dans laboutik/settings.py on ajoute:</p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">    INSTALLED_APPS = [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ...,</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    'laboutik_core',</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    AUTH_USER_MODEL = 'laboutik_core.CustomUser'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Dajngo à besoin d'une BD, nous allons la créer : </p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">./manage.py migrate</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>on voit une nouvelle base de données dans notre projet :
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_1bd46a93d9d713f32601e0efc53f7873.png" class="img_ev3q"></p><p>et dans le fichier settings :
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_3df05cceccef8245a1467116db77411c.png" class="img_ev3q"></p><p>Pour le moment nous laissons sqlite3, nous changerons plus tard en Production vers une DB plus adaptée .</p><p>Lançons le serveur : </p><div class="language-shell= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">./manage.py runserver</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Maintenant en vous connectant à l'adresse : <a href="http://127.0.0.1:8000/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:8000/</a> vous devriez avoir la page ci dessous : </p><p><img loading="lazy" src="https://codimd.communecter.org/uploads/upload_3095d9553a558ca4f5024567eeb12c7f.png" class="img_ev3q"></p><p>Vous avez maintenant dans votre projet 2 nouveaux répertoires <em>laboutik</em> et <em>laboutik_core</em> et le fichier racine <em>manage.py</em> : </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="configurons-pycharm">Configurons Pycharm<a href="#configurons-pycharm" class="hash-link" aria-label="Lien direct vers Configurons Pycharm" title="Lien direct vers Configurons Pycharm">​</a></h3><p>Pour l'instant nous n'avons pas indiqué à Pycharm notre environement . Il faut lui indiquer que nous travaillons avec Python3.10 , Poetry et Django .
Configurons l'interpreteur , dans settings de Pycharm :
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_c47a858894d9007d560bf34272948d6f.png" class="img_ev3q"></p><p>Add interpreter/Local/Poetry environement :
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_ca5d21bf2d08a1646387fd63c7625a5e.png" class="img_ev3q"></p><p>Dans "Poetry executable" indiquez le chemin d'installation de poetry installé precedemment .</p><p>Vérifions la configuration pour Django :
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_5f9d1348c6b8fc49c2f197b05110e3d2.png" class="img_ev3q"></p><p>Du coup maintenant Pycharm va nous alerter en cas d'erreur de syntaxe , proposer de l'auto-complétion ... trop top 👍 </p><p>Merci à JetBrains de nous supporter pour nos projets .
Pour tester si notre IDE a bien compris notre environement de travail , allez dans le fichier urls.py placer le curseur sur "path" et faites F12 .
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_62aa41db1310966ee8ab869fd0b63766.png" class="img_ev3q">
Vous devriez etre redirigé vers le fichier conf.py .</p><blockquote><p>Remarque pour Mac :
le raccourcis clavier est "fn + F12" si cela ne fonctionne pas modifiez le model Keymap sur " sublime Text Copy"
<img loading="lazy" src="https://codimd.communecter.org/uploads/upload_6648e596509e95743c39491e099b7e68.png" class="img_ev3q"></p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="modele-user">Modele user<a href="#modele-user" class="hash-link" aria-label="Lien direct vers Modele user" title="Lien direct vers Modele user">​</a></h3><p>La création d'un model user custom est fortement conseillé dès le début du projet.
Dans le futur il devient très compliqué de modifier le modele user une fois nos modeles sont lancés.</p><p>Dans le fichier models.py : </p><div class="language-python= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">from django.db import models</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">from django.contrib.auth.models import AbstractUser</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">from uuid import uuid4</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">class CustomUser(AbstractUser):</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    """</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    Modèle de base pour les utilisateurs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    On utilise des uuid4 plutôt que des pk auto-incrementés</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    """</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    uuid = models.UUIDField(primary_key=True, default=uuid4, editable=False, db_index=False)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Dans le fichier settings.py : </p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Model user custom</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">AUTH_USER_MODEL </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'laboutik_core.CustomUser'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>On applique les modifications en faisant une migration : </p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">./manage.py makemigrations</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./manage.py migrate</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="architecture-rapide-du-projet">Architecture rapide du projet<a href="#architecture-rapide-du-projet" class="hash-link" aria-label="Lien direct vers Architecture rapide du projet" title="Lien direct vers Architecture rapide du projet">​</a></h2><p>Listons les "objects" dont nous allons avoir besoin.</p><ul><li>Configuration</li><li>Point de vente</li><li>Catégories<ul><li>Produit<ul><li>TVAs</li></ul></li><li>Prix</li></ul></li><li>Users<ul><li>droits</li></ul></li><li>Moyens de paiement</li><li>Ventes</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="codons-nos-objets-">Codons nos objets :<a href="#codons-nos-objets-" class="hash-link" aria-label="Lien direct vers Codons nos objets :" title="Lien direct vers Codons nos objets :">​</a></h3><p>Dans le fichier models.py : </p><p>TODO: Vidéo sur <a href="https://peertube.communecter.org" target="_blank" rel="noopener noreferrer">https://peertube.communecter.org</a></p><p>Le detail du codage en Live <a href="https://2023-10-16-CodeWithMe-CodagePremiersObjets.mp4" target="_blank" rel="noopener noreferrer">ici</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="création-du-modèle-de-base-de-donnée-et-dadministration">Création du modèle de base de donnée et d'administration<a href="#création-du-modèle-de-base-de-donnée-et-dadministration" class="hash-link" aria-label="Lien direct vers Création du modèle de base de donnée et d'administration" title="Lien direct vers Création du modèle de base de donnée et d'administration">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="routage-url">Routage url<a href="#routage-url" class="hash-link" aria-label="Lien direct vers Routage url" title="Lien direct vers Routage url">​</a></h3><p>le fichier urls.py</p><p>il existe déja l'url de l'admin: </p><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">urlpatterns </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    path</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'admin/'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> admin</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">site</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">urls</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Lancement du serveur : </p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">./manage.py runserver</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">-</span><span class="token operator">&gt;</span><span class="token plain"> Starting development server at http://127.0.0.1:8000/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Du coup, si je vais dans <a href="http://127.0.0.1:8000/admin/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:8000/admin/</a></p><p><img loading="lazy" src="https://codimd.communecter.org/uploads/upload_16d13cc013a4cf7610ebcf2f5a794e3f.png" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="administration-django">Administration Django<a href="#administration-django" class="hash-link" aria-label="Lien direct vers Administration Django" title="Lien direct vers Administration Django">​</a></h3><p>Créons notre utilisateur admin.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Création du super user "root"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">./manage.py createsuperuser</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Attention, createsuperuser fabrique des users avec is_staff = True ET is_superuser = True
Seul is_staff est nécéssaire pour acceder à l'admin. is_superuser est comparable à un utilisateur "ROOT" qui a tout les droits sur l'admin.</p><p><img loading="lazy" src="https://codimd.communecter.org/uploads/upload_f20bd7ef2d8895d60fba43854d39e6ba.png" class="img_ev3q"></p><p>Enregistrer les modèles dans l'admin : </p><div class="language-python= codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python= codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain"># laboutik_core/admin.py</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">from django.contrib import admin</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">from laboutik_core.models import Product, Price, VAT, Category, PointOfSale</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"># Register your models here.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">admin.site.register(Product)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">admin.site.register(Price)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">admin.site.register(VAT)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">admin.site.register(Category)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">admin.site.register(PointOfSale)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://codimd.communecter.org/uploads/upload_203c37f9e1c3d369fc36423d5458e115.png" class="img_ev3q"></p><p>TODO: Uploader dans peertube
La vidéo complete en detail <a href="https://2023-10-16-CodeWithMe-PremierAdmin.mp4" target="_blank" rel="noopener noreferrer">ici</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Lien direct vers Conclusion" title="Lien direct vers Conclusion">​</a></h2><p>Nous avons maintenant notre environnement installé et nous pouvons créer des objets en base de donnée. </p><p>Dans les prochaines sessions, nous verrons comment créer notre "frontend" avec les templates Jinja, et comment rendre cette stack "MVT" moderne avec HTMX.</p>]]></content:encoded>
            <category>cod-ensamb</category>
            <category>code-with-me</category>
            <category>blog</category>
            <category>python</category>
            <category>poetry</category>
            <category>django</category>
            <category>jetbrains</category>
            <category>pycharm</category>
            <category>tibillet</category>
            <category>cashless</category>
            <category>caisse-enregistreuse</category>
            <category>tuto</category>
        </item>
        <item>
            <title><![CDATA[Linux, Docker, Compose, Traefik, Crowdsec, SSH, et c'est parti mon chaton !]]></title>
            <link>https://codecommun.coop/blog/sysadmin-mon-chaton-part1</link>
            <guid>https://codecommun.coop/blog/sysadmin-mon-chaton-part1</guid>
            <pubDate>Wed, 25 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Installation et sécurisation d'un serveur linux "from scratch" pour acceuillir nos outils.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="/img/federons/decollage.jpg" src="/assets/images/decollage-4089ffd3f23c7012f1b8fa9b7474f30d.jpg" width="512" height="512" class="img_ev3q"></p><p>Nous allons détailler ici la préparation d'un serveur sous distribution Debian (ou Ubuntu) pour acceuillir toutes nos
solutions libres que nous proposons dans la coopérative.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="préparation-du-système">Préparation du système<a href="#préparation-du-système" class="hash-link" aria-label="Lien direct vers Préparation du système" title="Lien direct vers Préparation du système">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="mises-à-jour-du-système">Mises à jour du système<a href="#mises-à-jour-du-système" class="hash-link" aria-label="Lien direct vers Mises à jour du système" title="Lien direct vers Mises à jour du système">​</a></h3><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> upgrade -y</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">reboot</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sécuriser-le-serveur">Sécuriser le serveur<a href="#sécuriser-le-serveur" class="hash-link" aria-label="Lien direct vers Sécuriser le serveur" title="Lien direct vers Sécuriser le serveur">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="connexion-shh-par-clé">Connexion SHH par clé<a href="#connexion-shh-par-clé" class="hash-link" aria-label="Lien direct vers Connexion SHH par clé" title="Lien direct vers Connexion SHH par clé">​</a></h4><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Depuis votre ordinateur client</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">ssh-copy-id </span><span class="token operator">&lt;</span><span class="token plain">user</span><span class="token operator">&gt;</span><span class="token plain">@</span><span class="token operator">&lt;</span><span class="token plain">ip</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># ou ajouter votre cle id_rsa.pub directement sur le serveur </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">nano</span><span class="token plain"> .ssh/authorized_keys </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="changer-le-port-découte-du-service-ssh-et-obliger-la-connexion-via-clé-ssh">Changer le port d'écoute du service SSH et obliger la connexion via clé ssh<a href="#changer-le-port-découte-du-service-ssh-et-obliger-la-connexion-via-clé-ssh" class="hash-link" aria-label="Lien direct vers Changer le port d'écoute du service SSH et obliger la connexion via clé ssh" title="Lien direct vers Changer le port d'écoute du service SSH et obliger la connexion via clé ssh">​</a></h4><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">nano</span><span class="token plain"> /etc/ssh/sshd_config</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Port 22</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Port </span><span class="token number">2252</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># choisissez un port entre 1024 et 65535</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># On en profite pour autoriser l'agent forwarding</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Cela sera trés utile pour pull/push des dépots git avec sa propre identité</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># plutôt que celle du serveur.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">AllowAgentForwarding </span><span class="token function" style="color:rgb(80, 250, 123)">yes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Pour encore plus d'efficacité, on force la clé ssh.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># L'user n'en sera que plus reconnaissable, avec sa clé et son agent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Attention à bien backuper votre clé. Si vous la perdez, vous perdez la main sur le serveur.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># To disable tunneled clear text passwords, change to no here!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">PasswordAuthentication no</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">#PermitEmptyPasswords no</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Attention, sur les serveurs VPS Ovh, un fichier de conf' ssh se cache dans le dossier /etc/ssh/sshd_config.d/ et permet
la connexion via mot de passe.
C'est utile pour la première connexion, mais ^ensez à le supprimer si vous voulez forcer la connexion par clé.</p><p>On recharge le daemon ssh :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">service</span><span class="token plain"> sshd reload</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="installer-crowdsec">Installer Crowdsec<a href="#installer-crowdsec" class="hash-link" aria-label="Lien direct vers Installer Crowdsec" title="Lien direct vers Installer Crowdsec">​</a></h4><p>Crowdsec est une solution open source très utile pour gérer la sécurité de votre serveur.
Il utilise une liste de banissement d'ip géré par la communauté, surveille les iptables, et peut même s'interfacer avec
un reverse proxy pour surveiller les requetes http. Plus d'info ici :</p><ul><li><a href="https://www.crowdsec.net/" target="_blank" rel="noopener noreferrer">https://www.crowdsec.net/</a></li><li><a href="https://plugins.traefik.io/plugins/6335346ca4caa9ddeffda116/crowdsec-bouncer-traefik-plugin" target="_blank" rel="noopener noreferrer">https://plugins.traefik.io/plugins/6335346ca4caa9ddeffda116/crowdsec-bouncer-traefik-plugin</a></li></ul><p>Avant d'installer la solution, il est nécéssaire de créer un compte gratuit sur leur site.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -s https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.deb.sh </span><span class="token operator">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">bash</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt-get</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> crowdsec</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> crowdsec-firewall-bouncer-iptables</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Allez sur l'interface Crowdsec et générez votre token d'invitation :</p><ul><li><a href="https://app.crowdsec.net/security-engines" target="_blank" rel="noopener noreferrer">https://app.crowdsec.net/security-engines</a></li></ul><p>Une commande du type suivant vous sera proposé :</p><p><code>sudo cscli console enroll ****</code></p><p>Lancez la, puis accepter l'invitation sur l'interface web.</p><p>Rebootez le serveur.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="installation-des-dépendances">Installation des dépendances<a href="#installation-des-dépendances" class="hash-link" aria-label="Lien direct vers Installation des dépendances" title="Lien direct vers Installation des dépendances">​</a></h3><p>Mes ptits softs que j'aime utiliser :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> update</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">apt</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> byobu </span><span class="token function" style="color:rgb(80, 250, 123)">htop</span><span class="token plain"> borgbackup</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="docker-">Docker :<a href="#docker-" class="hash-link" aria-label="Lien direct vers Docker :" title="Lien direct vers Docker :">​</a></h4><ul><li><a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/engine/install/ubuntu/</a></li></ul><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Un script d'installation est disponible, si vous ne voulez pas le faire a la main.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">curl</span><span class="token plain"> -fsSL https://get.docker.com -o get-docker.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Attention ! Vérifiez toujours le contenus des scripts téléchargé avant de les lancer en sudo ! </span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">sh</span><span class="token plain"> get-docker.sh</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Ajoutez votre utilisteur au groupe docker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">sudo</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">usermod</span><span class="token plain"> -aG </span><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> </span><span class="token environment constant" style="color:rgb(189, 147, 249)">$USER</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Relancez une nouvelle session utilisateur pour prendre en compte les changements de groupes et vérifiez que vous avez
bien les droits :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ps</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="traefik">Traefik<a href="#traefik" class="hash-link" aria-label="Lien direct vers Traefik" title="Lien direct vers Traefik">​</a></h4><p>Traefik est un service de reverse proxy. C'est lui qui gère la redirection du conteneur depuis votre DNS et qui s'occupe
du chiffrement HTTPS grâce à la formidable initiative de lets'encrypt.</p><p>Pour le faire tourner, vous devez avoir un nom de domaine qui pointe vers l'ip de votre serveur. Ajoutez un champ A sur
votre admin DNS.</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">#clonez le dépot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">git</span><span class="token plain"> clone git@github.com:TiBillet/Traefik-reverse-proxy.git</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> Traefik-reverse-proxy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Creez le sous réseau "frontend" commun</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> network create frontend</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Lancez les conteneur en mode daemon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> compose up -d</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># Vérifiez que le conteneur tourne et qu'il écoute bien les ports 80 et 443 :</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">ps</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS                                                                    NAMES</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">7f27255b935a   traefik:chevrotin   </span><span class="token string" style="color:rgb(255, 121, 198)">"/entrypoint.sh --lo…"</span><span class="token plain">   </span><span class="token number">5</span><span class="token plain"> seconds ago   Up </span><span class="token number">4</span><span class="token plain"> seconds   </span><span class="token number">0.0</span><span class="token plain">.0.0:80-</span><span class="token operator">&gt;</span><span class="token number">80</span><span class="token plain">/tcp, :::80-</span><span class="token operator">&gt;</span><span class="token number">80</span><span class="token plain">/tcp, </span><span class="token number">0.0</span><span class="token plain">.0.0:443-</span><span class="token operator">&gt;</span><span class="token number">443</span><span class="token plain">/tcp, :::443-</span><span class="token operator">&gt;</span><span class="token number">443</span><span class="token plain">/tcp traefik</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="testons-traefik-">Testons Traefik :<a href="#testons-traefik-" class="hash-link" aria-label="Lien direct vers Testons Traefik :" title="Lien direct vers Testons Traefik :">​</a></h4><p>Lançons un conteneur de test pour savoir si tout tourne bien :</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token builtin class-name" style="color:rgb(189, 147, 249)">cd</span><span class="token plain"> Traefik-reverse-proxy/test_conteneur</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">cat</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"DOMAIN=localhost"</span><span class="token plain"> </span><span class="token operator">&gt;</span><span class="token plain"> .env </span><span class="token comment" style="color:rgb(98, 114, 164)"># créons un fichier .env qui sera lu par compose</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">docker</span><span class="token plain"> compose up</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Si vous allez dans <a href="https://test.localhost" target="_blank" rel="noopener noreferrer">https://test.localhost</a>, vous devriez voir une page whoami !</p><p>Si vous avez un DNS qui pointe vers l'ip de votre serveur, changez le .env en conséquence pour avoir une connexion
chiffrée en TLS !</p><h1>Conclusion</h1><p>Et Hop ! Notre serveur est prêt pour acceuillir tous nos services futurs.
Dans un prochain article, nous allons voir comment installer Traefik en mode Wildcard pour le moteur TiBillet d'adhésion, de reservation et d'agenda
fédéré !</p>]]></content:encoded>
            <category>ubuntu</category>
            <category>linux</category>
            <category>wallet</category>
            <category>traefik</category>
            <category>crowsec</category>
            <category>administration systeme</category>
            <category>sysadmin</category>
        </item>
        <item>
            <title><![CDATA[Citation de Framatophe dans le Framablog]]></title>
            <link>https://codecommun.coop/blog/libre-anar</link>
            <guid>https://codecommun.coop/blog/libre-anar</guid>
            <pubDate>Sun, 15 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Le libre ne suffit pas à l'émancipation. Il faut aussi des chaînes de confiance et des communs productifs.]]></description>
            <content:encoded><![CDATA[<ul><li>Auteur : <a href="https://framablog.org/author/framatophe/" target="_blank" rel="noopener noreferrer">Framatophe</a>, Membre du conseil d'administration de Framasoft</li><li>Article original : <a href="https://framablog.org/2023/10/09/logiciel-libre-et-anarchisme/" target="_blank" rel="noopener noreferrer">Logiciel libre et anarchisme – Framablog</a></li></ul><p><img loading="lazy" alt="https://framablog.org/wp-content/uploads/2023/10/hacker-bibel-ccc-p15.png" src="/assets/images/anar-libre-882b3afcae3a89a4308454f2135bb80a.png" width="1082" height="1126" class="img_ev3q"></p><blockquote><p>Le logiciel libre n’est pas exempt de causer <!-- -->[un]<!-- --> effet de domination ne serait-ce parce que les rapports aux
technologies sont rarement équilibrés. On a beau postuler l’horizontalité entre concepteur et utilisateur, ce dernier
sera toujours dépendant, au moins sur le plan cognitif. Dans une économie contributive idéale du Libre, concepteurs et
utilisateurs devraient avoir les mêmes compétences et le même degré de connaissance. Mais ce n’est généralement pas le
cas et comme disait Lawrence Lessig, « Code is law »</p></blockquote><p>[...]</p><blockquote><p>L’équilibre peut alors être trouvé en créant des chaînes de confiance, c’est-à-dire des efforts collectifs de création
de communs de la connaissance (formations, entraide, vulgarisation) et des communs productifs : des organisations à
tendances coopératives et associatives capables de proposer des formules d’émancipation pour tous. Créer du Libre sans
proposer de solutions collectives d’émancipation revient à démontrer que la liberté existe à des esclaves enchaînés tout
en les rendant responsables de leurs entraves.</p></blockquote>]]></content:encoded>
            <category>blog</category>
            <category>citation</category>
            <category>Framatophe</category>
            <category>Framablog</category>
            <category>anarchisme</category>
            <category>logiciel libre</category>
            <category>domination</category>
            <category>emancipation</category>
            <category>communs</category>
            <category>coopérative</category>
        </item>
        <item>
            <title><![CDATA[Citation de Sam et Max dans Hacker News]]></title>
            <link>https://codecommun.coop/blog/sametmax</link>
            <guid>https://codecommun.coop/blog/sametmax</guid>
            <pubDate>Sun, 15 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Je suis heureux de constater que les approches minimalistes, comme svelte, htmx et alpine.js sont de plus en plus prisées.]]></description>
            <content:encoded><![CDATA[<ul><li>Auteur : <a href="https://news.ycombinator.com/user?id=sametmax" target="_blank" rel="noopener noreferrer">Sam et Max</a>, Bloggeur français à propos de Python, Django,
Linux, Open Source, Free Software, etc.</li><li>Article original : <a href="https://news.ycombinator.com/item?id=36429671" target="_blank" rel="noopener noreferrer">Hacker News</a></li></ul><p><img loading="lazy" alt="/img/blog/hypermedia/original.png" src="/assets/images/original-f0e6c13303c2d4e69baa027cd6ce733d.png" width="1500" height="500" class="img_ev3q"></p><blockquote><p>Je suis heureux de constater que les approches minimalistes, comme svelte, htmx et alpine.js sont de plus en plus
prisées.</p><p>J'ai eu l'impression de me battre seul pendant les années dorées de node, webpack et react où tout le
monde créait des piles folles et ajoutait GraphQL et ainsi de suite, pour essentiellement obtenir ce que Django + jquery
ont fait il y a 10 ans en un dixième du temps et du code.</p><p>Jusqu'à présent, j'ai également survécu <!-- -->[à ces déclarations ]<!-- -->:</p><ul><li>xml est l'avenir</li><li>utilisons nosql pour toutes les choses</li><li>il faut utiliser le même langage pour le back comme pour le front</li><li>oui, votre site doit avoir une version AMP (ah, vous l'avez oubliée celle-là, n'est-ce pas ? C'était tellement
important, et puis pouf, c'est parti comme une larme sous la pluie)</li><li>oui, votre page d'accueil doit être une SPA</li><li>vous ne pouvez rien coder sans async</li><li>vous ne pouvez pas vivre sans une file d'attente de messages</li><li>tout doit devenir un micro-service</li><li>bien sûr, vous avez besoin d'un conteneur pour cela</li><li>il faut bien sûr un orchestrateur pour organiser ces conteneurs</li><li>bien sûr, vous avez besoin du nuage, il serait insensé de s'occuper soi-même de ces conteneurs et de ces
orchestrateurs</li><li>Hey, pourquoi as-tu un serveur ? Utilise un backend sans serveur !</li><li>Hey, pourquoi as-tu un backend ? Il suffit de l'appeller depuis une plateforme Saas !</li></ul><p>Chaque année, une génération d'ingénieurs doit apprendre les concepts suivants : "il n'y a pas de solution miracle", "
utilisez la bonne technologie pour le bon problème", "vous n'êtes pas Google", "réécrire une base de code tous les deux
ans n'est pas une bonne décision commerciale", "les choses coûtent de l'argent".</p></blockquote>]]></content:encoded>
            <category>blog</category>
            <category>citation</category>
            <category>Sam et Max</category>
            <category>htmx</category>
        </item>
        <item>
            <title><![CDATA[HOWL - Hypermedia partout]]></title>
            <link>https://codecommun.coop/blog/howl</link>
            <guid>https://codecommun.coop/blog/howl</guid>
            <pubDate>Sat, 14 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Sobriété, simplicité dans notre code de développement. HOWL ! ne succombez pas à la pression des javascripties. Soyez libre de choisir la technologie qui correspond le mieux à vos goûts.]]></description>
            <content:encoded><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tldr-">TLDR :<a href="#tldr-" class="hash-link" aria-label="Lien direct vers TLDR :" title="Lien direct vers TLDR :">​</a></h3><p>Libérez vous de la pression qu'apporte le Javascript partout. Lorsque vous utilisez une approche hypermédia pour votre
application web, vous êtes libre de choisir la technologie côté serveur qui correspond le mieux à votre problème et à
vos goûts techniques.</p><p><img loading="lazy" alt="/img/blog/hypermedia/whowillwin.png" src="/assets/images/whowillwin-6b7799ef2d82bcc18d919162ff91ddf9.png" width="680" height="445" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="préalable">Préalable.<a href="#préalable" class="hash-link" aria-label="Lien direct vers Préalable." title="Lien direct vers Préalable.">​</a></h2><p>Nous souhaitons à travers ce blog partager des articles, des tips, des philosophies ou des idées qui ont un rapport de
près ou de loin avec les projets de la coopérative.</p><p>Je vais donc commencer par un concept que je découvre récemment (depuis un an ou deux.) et dont j'aime discuter : la "
pile HOWL".</p><p>HOWL est l'acronyme de Hypermedia On Whatever you'd Like.</p><p>La suite est une traduction de l'article
de <a href="https://hypermedia.systems/" target="_blank" rel="noopener noreferrer">Carson Gross</a> : <a href="https://htmx.org/essays/hypermedia-on-whatever-youd-like/" target="_blank" rel="noopener noreferrer">HOWL: Hypermedia On Whatever You'd Like</a></p><p>Si le sujet vous intéresse, je vous invite vous balader sur les sites suivant, il y a plein de concepts intéressants à
découvrir.</p><ul><li><a href="https://hypermedia.systems/" target="_blank" rel="noopener noreferrer">https://hypermedia.systems/</a></li><li><a href="https://htmx.org/essays/" target="_blank" rel="noopener noreferrer">https://htmx.org/essays/</a></li><li><a href="https://hyperscript.org/" target="_blank" rel="noopener noreferrer">https://hyperscript.org/</a></li></ul><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>remarque</div><div class="admonitionContent_S0QG"><p>SPA : Single Page Application. Une application web qui ne charge qu'une seule page HTML et qui utilise JavaScript pour
modifier le contenu de la page.
Globalement, la philosophie de React, Vue et de tout les frameworks front-end Javascript modernes.</p><p>MPA : Multiple Page Application.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hypermedia-partout">Hypermedia partout<a href="#hypermedia-partout" class="hash-link" aria-label="Lien direct vers Hypermedia partout" title="Lien direct vers Hypermedia partout">​</a></h2><p>Carson Gross
May 23, 2023</p><blockquote><p>Le seul grand avantage restant des MPAs est le choix du langage de programmation côté serveur.
Si vous faites déjà partie de la résistance anti-JavaScript, alors rien de ce que je dirai dans le reste de cet exposé
n'aura d'importance.
Mais j'y reviendrai plus tard : ce bateau a peut-être coulé...</p><p>Rich Harris - <a href="https://youtubetranscript.com/?v=860d8usGC0o&amp;t=440" target="_blank" rel="noopener noreferrer">Les SPA ont-ils ruiné le Web</a> ?</p></blockquote><p>Un concept dont nous aimons parler est celui de la "pile HOWL". HOWL est l'acronyme de Hypermedia On Whatever you'd
Like.</p><p>En résumé, la pile HOWL est la suivante : lorsque vous utilisez une approche hypermédia pour votre application web, vous
êtes libre de choisir la technologie côté serveur qui correspond le mieux à votre problème et à vos goûts techniques.er
server-side technology best fits your problem and your own technical tastes.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="la-pression-du-javascript">La pression du JavaScript<a href="#la-pression-du-javascript" class="hash-link" aria-label="Lien direct vers La pression du JavaScript" title="Lien direct vers La pression du JavaScript">​</a></h2><p>Si vous décidez d'utiliser un framework SPA pour votre application web, vous aurez naturellement une large base de code
front-end écrite en JavaScript.</p><p>Dans ces conditions, la question suivante se posera inévitablement :</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">"Pourquoi ne faisons-nous pas aussi le back-end en JavaScript ?"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>C'est une question raisonnable et il y a beaucoup d'avantages à adopter le même langage de programmation des deux côtés
du fil :</p><ul><li>Vous pouvez partager la logique d'application entre les deux bases de code. La logique de validation en est un bon
exemple.</li><li>Vous pouvez partager des structures de données entre les deux bases de code.</li><li>Vous pouvez acquérir une expertise dans un seul langage, JavaScript, ce qui permet aux développeurs de travailler plus
facilement sur les différentes parties de votre application.</li><li>Vous pouvez réutiliser le système de construction et les connaissances en matière de gestion des dépendances que vous
avez acquises pour la partie frontale.</li></ul><p>Cette pression en faveur de l'adoption de JavaScript ne fera que croître au fur et à mesure que votre investissement
dans l'écosystème JavaScript augmentera.</p><p>En outre, JavaScript s'est considérablement amélioré au cours des cinq dernières années et il existe aujourd'hui
plusieurs excellents applications côté serveur pour l'exécuter. Bon nombre des anciens arguments concernant le désordre
du
langage peuvent être écartés car ils peuvent être évités grâce au <em>linting</em>, à la discipline des développeurs, etc.</p><p>JavaScript est le langage dominant parmi les leaders d'opinion en matière de développement web et il existe un grand
nombre de tutoriels, de <em>code camps</em>, etc. qui mettent fortement l'accent sur ce langage. Rien ne réussit mieux que le
succès, et JavaScript (ainsi que React) a réussi.</p><p>Appelons le résultat de cette situation la pression JavaScript et reconnaissons que presque tous les développeurs
travaillant dans le web la ressentent au moins dans une certaine mesure.</p><p><img loading="lazy" alt="/img/blog/hypermedia/htmlvsjson.png" src="/assets/images/htmlvsjson-add31eceaa06f8f08817f7e5a9d79e15.png" width="477" height="544" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hypermedia--notre-seul-espoir">Hypermedia : Notre seul espoir<a href="#hypermedia--notre-seul-espoir" class="hash-link" aria-label="Lien direct vers Hypermedia : Notre seul espoir" title="Lien direct vers Hypermedia : Notre seul espoir">​</a></h2><p>Quel espoir les développeurs non-JavaScript ont-ils dans le développement web ?</p><p>Eh bien, il existe une technologie plus ancienne utilisé dans les navigateurs : l'hypermédia.</p><p>Les navigateurs offrent un excellent support HTML (et le Document Object Model, ou DOM). En fait, même si vous utilisez
un framework SPA, vous travaillerez avec cette infrastructure hypermédia sous une forme ou une autre (via des modèles
JSX, par exemple), ne serait-ce que pour créer des interfaces utilisateur qu'un navigateur peut comprendre.</p><p>Vous utiliserez donc HTML ou les API DOM connexes d'une manière ou d'une autre dans votre application web.</p><p><strong>Et si nous faisions de HTML un hypermédia plus puissant ?</strong></p><p>C'est l'idée de <a href="https://htmx.org/" target="_blank" rel="noopener noreferrer">htmx</a>, qui permet de mettre en œuvre
des <a href="https://htmx.org/examples" target="_blank" rel="noopener noreferrer">modèles d'application web modernes courants</a> en utilisant l'
approche hypermédia. Cela comble le fossé entre les MPA et les SPA traditionnelles, en rendant possible l'adoption de l'
approche hypermédia pour un nombre beaucoup plus important d'applications web.</p><p>Une fois que vous avez adopté cette approche hypermédia (et rappelez-vous que vous allez de toute façon utiliser
l'infrastructure hypermédia, alors pourquoi ne pas l'exploiter autant que possible ?), un effet secondaire surprenant se
produit :</p><p>Soudain, l'avantage du choix du langage côté serveur que Harris attribuait aux MPAs est de nouveau d'actualité.</p><p>Si l'interface de votre application est principalement écrite en termes de HTML, avec peut-être un peu de script côté
client, et sans grande base de code JavaScript, vous avez soudainement diminué de façon spectaculaire (ou entièrement
éliminé) la pression JavaScript au niveau de l'interface.</p><p>Vous pouvez désormais choisir le langage (et le cadre) côté serveur en fonction d'autres considérations : techniques,
esthétiques ou autres :</p><ul><li>Peut-être travaillez-vous dans le domaine de l'IA et souhaitez-vous utiliser une variante Lisp pour votre projet ?</li><li>Peut-être travaillez-vous dans le domaine du big data et souhaitez-vous utiliser Python ?</li><li>Vous connaissez peut-être très bien Django et vous aimez l'approche "batteries-included" qu'il adopte.</li><li>Peut-être préférez-vous Flask et l'approche dépouillée qu'il adopte ?</li><li>Peut-être aimez-vous l'aspect brut et proche du HTML de PHP ?</li><li>Vous avez peut-être une base de code Java existante qui a besoin d'être améliorée.</li><li>Peut-être que vous apprenez Cobol, et que vous voulez utiliser htmx pour en faire une interface agréable.</li><li>Peut-être aimez-vous vraiment Rust, Ocaml, Kotlin, Haskell, .NET, Clojure, Ada, ColdFusion, Ruby... peu importe !</li></ul><p>Il s'agit là de points de vue techniques, philosophiques et esthétiques tout à fait raisonnables.</p><p>Et, en adoptant l'hypermédia comme principale technologie <em>front</em>, vous poursuivez tous ces objectifs sans avoir
recours à une double base de code. L'hypermédia ne se soucie pas de ce que vous utilisez pour le produire : vous
pouvez utiliser l'hypermédia sur ce que vous voulez. HOWL !</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="un-web-ouvert-à-tous">Un Web ouvert à tous<a href="#un-web-ouvert-à-tous" class="hash-link" aria-label="Lien direct vers Un Web ouvert à tous" title="Lien direct vers Un Web ouvert à tous">​</a></h2><p>Et quand nous disons "tout le monde", nous le pensons vraiment.</p><p>Voici une capture d'écran de la sous-section HOWL du <a href="https://htmx.org/discord" target="_blank" rel="noopener noreferrer">discord htmx</a> récemment. Notez qu'il ne
s'agit que des canaux qui
ont un trafic actif, il y en a beaucoup d'autres.</p><p><img loading="lazy" alt="/img/blog/hypermedia/howl-channels.png" src="/assets/images/howl-channels-0da8d34cb954d128c9acb85583576d6a.png" width="254" height="510" class="img_ev3q"></p><p>Vous pouvez voir que nous avons des conversations en cours dans un tas de langages de programmation et de frameworks
différents : Java, Go, .NET, Rust, Clojure, PHP, Ruby, Python, Ocaml. Nous avons même des gens qui parlent de
l'utilisation de htmx avec Bash et Cobol !</p><p>C'est exactement l'avenir que nous voulons voir : un Web riche et dynamique dans lequel chaque langage et cadre
d'arrière-plan peut jouer le rôle d'une alternative intéressante. Chaque langage et framework possède ses propres
forces et propres cultures et chacun peut contribuer au <a href="https://hypermedia.systems/" target="_blank" rel="noopener noreferrer">système hypermédia</a> magique qu'est
le Web.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="mais-sagit-il-dune-résistance-anti-javascript-">Mais... S'agit-il d'une résistance anti-JavaScript ?<a href="#mais-sagit-il-dune-résistance-anti-javascript-" class="hash-link" aria-label="Lien direct vers Mais... S'agit-il d'une résistance anti-JavaScript ?" title="Lien direct vers Mais... S'agit-il d'une résistance anti-JavaScript ?">​</a></h2><p>Avant de terminer cet essai, nous voulons aborder l'idée que la résistance à <strong>JavaScript partout</strong> est nécessairement
anti-JavaScript.</p><p>Il est vrai que nous avons eu notre <a href="https://htmx.org/img/js-the-good-parts.jpeg" target="_blank" rel="noopener noreferrer">part de blagues sur JavaScript</a> et que
nous sommes allés jusqu'à créer un langage de script alternatif pour le web, l'hyperscript.</p><p>On pourrait donc penser que nous devrions être des anti-javascripteurs patentés.</p><p>Mais, au contraire, nous apprécions profondément JavaScript.</p><p>Après tout, htmx et hyperscript sont tous deux construits en JavaScript. Nous n'aurions pas pu créer ces bibliothèques
sans JavaScript qui, quoi qu'on en dise, a le grand mérite d'être là.</p><p>Nous allons même jusqu'à recommander l'utilisation de JavaScript pour les besoins de scripts frontaux dans une
application hypermédia, à condition que vous scriptiez d'une manière adaptée aux hypermédias.</p><p>De plus, nous ne déconseillons pas l'utilisation de JavaScript (ou TypeScript) côté serveur pour une application
hypermédia, si ce langage est la meilleure option pour votre équipe. Comme nous l'avons dit précédemment, JavaScript
dispose aujourd'hui de plusieurs excellents runtimes côté serveur et de nombreuses excellentes bibliothèques côté
serveur.</p><p>C'est peut-être la meilleure option pour vous et votre équipe, et il n'y a aucune raison de ne pas l'utiliser.</p><p>Hypermedia On <strong>Whatever you'd Like</strong> signifie exactement cela : ce que vous voulez.</p><p>Mais JavaScript n'est pas, et ne devrait pas être, la seule option côté serveur pour votre équipe.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="le-grand-retournement">Le grand retournement<a href="#le-grand-retournement" class="hash-link" aria-label="Lien direct vers Le grand retournement" title="Lien direct vers Le grand retournement">​</a></h2><p>Avec la résurgence de l'intérêt pour les hypermédias (et leur amélioration), un avenir ouvert et diversifié pour le Web
est désormais une possibilité réelle, voire une réalité émergente.</p><p>Le Web a été conçu pour être un système hypermédia ouvert, polyglotte et participatif.</p><p>Et ce rêve n'a pas encore pris fin, du moins pas encore !</p><p>Nous pouvons maintenir ce rêve en vie en réapprenant et en adoptant la technologie fondamentale du web : l'hypermédia.</p>]]></content:encoded>
            <category>blog</category>
            <category>hypermedia</category>
            <category>hyperscript</category>
            <category>htmx</category>
            <category>sobriété</category>
            <category>simplicité</category>
            <category>javascript</category>
        </item>
        <item>
            <title><![CDATA[Première note du nouveau blog Code Commun !]]></title>
            <link>https://codecommun.coop/blog/prems</link>
            <guid>https://codecommun.coop/blog/prems</guid>
            <pubDate>Mon, 09 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Bienvenue sur le blog de la Coopérative Code Commun ! Nous allons essayer de vous expliquer ce que nous faisons, comment nous le faisons, pourquoi nous avons fait comme ça et tout ce qui nous motive !]]></description>
            <content:encoded><![CDATA[<p>Tout l'équipe de la Coopérative Code Commun vous souhaite la bienvenue sur notre blog !</p><p>Aussi, nous migrons les articles du blog originalement postés sur https//tibillet.org/blog ici.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="note-dintention">Note d'intention<a href="#note-dintention" class="hash-link" aria-label="Lien direct vers Note d'intention" title="Lien direct vers Note d'intention">​</a></h2><p>Nous souhaitons à travers ce blog partager des articles, des tips, des philosophies ou des idées qui ont un rapport de
près ou de loin avec les projets de la coopérative.</p><p>Vous trouverez donc dans ce blog des citations, des traductions d'articles, des notes personnelles, des tutoriels, des
recettes de création de logiciel libre... Bref, tout ce qui peut encourager le partage de connaissances, la
transmission de savoir, et la diffusion de la culture libre.</p><p>Et si tout ceci vous donne envie de venir contribuer à nos projets, voire même à ce blog, génial ! Venez discuter avec
nous ( checkez les liens dans le bas de page ) !</p><p><img loading="lazy" alt="/img/Graphical_codecommun540.png" src="/assets/images/Graphical_codecommun540-1af3799070ac1f76f882b68b1a18fc66.png" width="540" height="535" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="historique-et-origine">Historique et origine<a href="#historique-et-origine" class="hash-link" aria-label="Lien direct vers Historique et origine" title="Lien direct vers Historique et origine">​</a></h2><p>A l'origine du projet de la Coopérative, il y a <a href="https://tibillet.org" target="_blank" rel="noopener noreferrer">TiBillet</a>, le Manapany Festival et l'association
organisatrice : Les 3Peaks. Nous étions une bande de joyeux.ses bidouilleur.ses.s et développeur.ses.s bénévoles. Nous
avions décidé de créer nos propres outils numériques principalement pour une raison : nous avions envie d'apprendre à le
faire nous même :)</p><p>En dehors du festival annuel, l'association hébergeait un café associatif ouvert régulièrement et organisait des
évènements culturels mensuels avec une contrainte : si l'entrée était libre à tous et toutes, il nous fallait un outil
pour gérer les adhésions associatives et les paiements des consommations. Pourquoi ne pas continuer à utiliser la carte
NFC cashless du festival tout au long de l'année ?</p><p>En même temps, nous regardions comment les solutions existantes des professionnels du secteur fonctionnaient : Carte et
bracelets NFC à usage unique, remboursement limité dans le temps, prix prohibitif pour l'organisateur et le public...
Nous ne voulions vraiment pas reproduire un modèle qui semblait être juste un moyen de faire payer plus les
festivaliers...</p><p>Voici que la carte d'adhésion 3Peask est née : Valide à vie, gratuite, rechargeable en ligne, remboursable à tout
moment, utilisable au café associatif toute l'année comme au festival, elle permettait de gérer un point de vente et une
caisse enregistreuse tout en s'assurant que le membre associatif était à jour de sa cotisation.</p><p>Et ça a cartonné ! Avoir plus de 800 membres à l'année fut une expérience très enrichissante. Nous développions TiBillet
au fur et à mesure des besoins, des remarques et des idées de nos membres : nous codons un outil que nous utilisons au
quotidien.</p><p>Aujourd'hui (Juin 2023), après 6 ans de développement, la carte <a href="https://tibillet.org" target="_blank" rel="noopener noreferrer">TiBillet</a> permet beaucoup de
choses, et nous avons décidé de monter notre équipe en coopérative pour péréniser et rassembler autour de ce projet.</p><p>Et bien tout ceci, c'est ce que l'on va tenter de vous raconter dans ce blog. Nous allons essayer de vous expliquer ce
que nous faisons, comment nous le faisons, pourquoi nous avons fait comme ça et tout ce qui nous motive !</p><p>A très vite !</p>]]></content:encoded>
            <category>blog</category>
            <category>tibillet</category>
            <category>histoire</category>
            <category>origine</category>
        </item>
        <item>
            <title><![CDATA[Fédération 5 - FEDOW]]></title>
            <link>https://codecommun.coop/blog/federation-part5-fedow</link>
            <guid>https://codecommun.coop/blog/federation-part5-fedow</guid>
            <pubDate>Tue, 05 Sep 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Fédérons TiBillet, cinquième partie. Open wallet, blockchain, économie sociale et solidaire sont dans un bateau.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="/img/federons/fedow_logo.jpg" src="/assets/images/fedow_logo-ebe6972c7c7b7bad9351d31f9e5b2818.jpg" width="256" height="256" class="img_ev3q"></p><h1>TiBillet/FEDOW : <strong>FED</strong>erated and <strong>O</strong>pen <strong>W</strong>allet.</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cest-quoi-fedow-">C'est quoi FEDOW ?<a href="#cest-quoi-fedow-" class="hash-link" aria-label="Lien direct vers C'est quoi FEDOW ?" title="Lien direct vers C'est quoi FEDOW ?">​</a></h2><p>Résumé : </p><p>Outil <a href="https://fr.wikipedia.org/wiki/Free/Libre_Open_Source_Software" target="_blank" rel="noopener noreferrer">FLOSS</a> de création et de gestion d'un groupement de monnaies locales, complémentaire et citoyenne (MLCC) au sein d'un réseau fédéré. </p><p>S'intégrant aux outils <a href="https://tibillet.org" target="_blank" rel="noopener noreferrer">TiBillet</a> il permet l'utilisation de portefeuilles dématérialisés dans différents lieux associatifs, coopératifs et/ou commerciaux.</p><p>Enfin, Fedow intègre des principes de <a href="https://fr.wikipedia.org/wiki/Monnaie_fondante" target="_blank" rel="noopener noreferrer">monnaie fondantes</a> dans une chaine de block par preuve d'autorité, transparente, non spéculative et non énergivore.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="code-source-et-documentation-technique-publiés-sous-licence-agplv3-">Code source et documentation technique publiés sous licence AGPLv3 :<a href="#code-source-et-documentation-technique-publiés-sous-licence-agplv3-" class="hash-link" aria-label="Lien direct vers Code source et documentation technique publiés sous licence AGPLv3 :" title="Lien direct vers Code source et documentation technique publiés sous licence AGPLv3 :">​</a></h2><p><a href="https://github.com/TiBillet/Fedow" target="_blank" rel="noopener noreferrer">https://github.com/TiBillet/Fedow</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="manifeste-pour-lappropriation-dune-économie-locale-sociale-et-solidaire">Manifeste pour l'appropriation d'une économie locale, sociale et solidaire.<a href="#manifeste-pour-lappropriation-dune-économie-locale-sociale-et-solidaire" class="hash-link" aria-label="Lien direct vers Manifeste pour l'appropriation d'une économie locale, sociale et solidaire." title="Lien direct vers Manifeste pour l'appropriation d'une économie locale, sociale et solidaire.">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="moteur-libre-et-open-source-de-gestion-de-monnaies-temps-etou-locale">Moteur libre et open-source de gestion de monnaies temps et/ou locale.<a href="#moteur-libre-et-open-source-de-gestion-de-monnaies-temps-etou-locale" class="hash-link" aria-label="Lien direct vers Moteur libre et open-source de gestion de monnaies temps et/ou locale." title="Lien direct vers Moteur libre et open-source de gestion de monnaies temps et/ou locale.">​</a></h3><p>Parce qu'une banque peut être un logiciel libre :
Nous n'avons pas besoin de blockchain spéculative, de NFT, DeFi ou Dapp ou de tout autre battage techno-solutionniste.</p><p>Tout ce dont nous avons besoin, c'est d'un moteur de création monétaire, de gestion de compte et de transactions.
Le tout sous une gestion fédérée et transparente, pour créer des réseaux de points de vente acceptant des monnaies locales, des monnaies temporelles ou même des monnaies qui ne sont pas des monnaies.</p><p>Un outil simple pour créer une petite banque à l'échelle d'un petit ou d'un grand territoire et soutenir une économie locale, sociale et inclusive.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pourquoi-">Pourquoi ?<a href="#pourquoi-" class="hash-link" aria-label="Lien direct vers Pourquoi ?" title="Lien direct vers Pourquoi ?">​</a></h3><p>Chez Code Commun (la coopérative numérique qui développe l'écosystème TiBillet), nous pensons que le logiciel libre couplé à des pratiques de gouvernance ouverte et transparente pour une économie sociale et solidaire sont les conditions d'une société que nous souhaitons voir émerger.</p><p>Avec <strong>Fedow</strong>, qui s'inscrit dans l'écosystème <strong>TiBillet</strong>, nous souhaitons permettre à chacun de créer ou rejoindre une fédération de monnaies <strong>locale</strong> ou <strong>temps</strong> et de participer à sa gouvernance.</p><p>Nous ne croyons pas aux solutions technologiques promises par le Web3 : Blockchains énergivores, création de valeur sur du vide, bulles spéculatives, marchés d'échanges dérégulés, gourous milliardaires… Autant de promesses populistes d'empuissancements non tenues au service d'une économie ultra-libérale de la rareté et de la spéculation.</p><p>Ceci dit, nous ne jetons pas le bébé avec l'eau du bain.</p><p>Nous pensons que les entreprises humaines, coopératives et locales peuvent (doivent ?) être soutenues par des outils numériques libres pour construire des structures bancaires locales et coopératives au service d'une économie réelle.</p><p>Nous pensons que les technologies de blockchain peuvent aider en garantissant la sécurité, la transparence et la gouvernance partagée : <em>The code we own is law.</em></p><p>Nous souhaitons construire <strong>Fedow</strong> dans ce sens : un outil numérique simple et compréhensible par chacun pour une économie <strong>réelle, non spéculative et transparente.</strong></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="léconomie-réelle-et-la-blockchain-éthique">L'économie réelle et la blockchain éthique<a href="#léconomie-réelle-et-la-blockchain-éthique" class="hash-link" aria-label="Lien direct vers L'économie réelle et la blockchain éthique" title="Lien direct vers L'économie réelle et la blockchain éthique">​</a></h3><p>Imaginons un livre de compte tenu par tous les acteurs d'une coopérative.</p><p>Dans ce livre de compte, chaque acteur peut créer sa propre monnaie et peut (ou non) l'échanger à un taux fixe avec les autres monnaies de la coopérative.</p><p>Une monnaie fédérée à l'ensemble des acteurs est créée, indexée sur l'euro pour que chaque monnaie puisse s'échanger et servir à l'économie réelle des biens et services.</p><p>D'autres type de monnaies non indexée sur l'euro peuvent être créées : Monnaie temps pour s'échanger des services ou valoriser le bénévolat, monnaie "cadeau" pour analyser les stocks offerts, monnaie "ticket resto" pour gérer des repas des invités, et même monnaie "libre" compatibles avec d'autres systèmes comme la June.</p><p>Couplés au reste des outils de TiBillet, il est alors possible de créer des points de ventes, des caisses enregistreuses, des rapports de comptabilité légaux et des boutiques en ligne qui acceptent indifféremment les monnaies locales et fédérées du réseau, comme des espèces ou cartes bancaires.</p><p>Tout ceci avec du matériel DiY et du software low-tech, en favorisant au maximum le réemploi et le reconditionnement de matériel existant, et en utilisant une preuve d'enjeu comme mécanisme de consensus solide, sécurisé et transparent de validation (cf explications plus bas).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="financement-pérennisation-du-projet-et-lutte-contre-la-spéculation">Financement, pérennisation du projet et lutte contre la spéculation.<a href="#financement-pérennisation-du-projet-et-lutte-contre-la-spéculation" class="hash-link" aria-label="Lien direct vers Financement, pérennisation du projet et lutte contre la spéculation." title="Lien direct vers Financement, pérennisation du projet et lutte contre la spéculation.">​</a></h3><p>Imaginons un mécanisme qui puisse à la fois :</p><ul><li>Inciter de nouveaux acteurs à rejoindre la fédération ou en créer de nouvelles.</li><li>Financer le développement du projet libre et coopératif (Problématique récurrente dans le milieu des logiciels  libres).</li><li>Lutter contre la spéculation et l'accumulation des capitaux pour une économie réelle et non financiarisée.</li></ul><p>Une idée a été retenue. Elle a le mérite de résoudre les trois problématiques soulevées et s'inspire fortement de la <a href="https://fr.wikipedia.org/wiki/Monnaie_fondante" target="_blank" rel="noopener noreferrer">monnaie fondante</a> théorisé par l'économiste <a href="https://fr.wikipedia.org/wiki/Silvio_Gesell" target="_blank" rel="noopener noreferrer">Silvio Gesell</a>.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="concepts-">Concepts :<a href="#concepts-" class="hash-link" aria-label="Lien direct vers Concepts :" title="Lien direct vers Concepts :">​</a></h4><ul><li>Tout le matériel nécessaire est produit par la coopérative et distribuée à ses acteurs à prix coutant. (matériel de points de vente, TPE, carte RFID, logiciel comptable, e-boutique, etc... voir <a href="https://tibillet.org" target="_blank" rel="noopener noreferrer">TiBillet</a>)</li><li>Chaque utilisateur dispose d'un portefeuille numérique qui lui permet d'utiliser toutes les monnaies du réseau.</li><li>Chaque lieu de point de vente est un <strong>nœud</strong> du réseau et est considéré comme un point de change.</li><li>Les portefeuilles sont utilisables à vie et sans frais pour les utilisateurs ni pour les <strong>nœuds</strong>.</li><li>Un <a href="https://fr.wikipedia.org/wiki/Demeurage_(finance)" target="_blank" rel="noopener noreferrer">demeurage</a> est appliqué sur les portefeuilles sous la condition suivante : Si la monnaie n'est pas utilisée sous un certain délai (un an ou plus?) elle fond. <strong>Une partie est prélevée pour être réinjecté dans le réseau coopératif.</strong></li></ul><p>Les principes du demeurage et de la monnaie fondante permettent de favoriser la circulation des capitaux. En intégrant ce mécanisme dans le code de <strong>Fedow</strong>, nous tentons d'inciter la création d'un écosystème redistributif, social et solidaire.</p><p>Plus vous encouragez vos utilisateurs à utiliser une monnaie locale, plus vous récolterez une partie de la monnaie fondante issu du <strong>demeurage</strong>.</p><p>Ce mécanisme propose une solution incitative à la circulation de monnaie(s) locale(s) qui est une grande problématique de beaucoup de MLCC (monnaies locales citoyennes et complémentaires).</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="je-suis-un-utilisateur-lambda-en-pratique-ça-donne-quoi-">Je suis un utilisateur lambda, en pratique ça donne quoi ?<a href="#je-suis-un-utilisateur-lambda-en-pratique-ça-donne-quoi-" class="hash-link" aria-label="Lien direct vers Je suis un utilisateur lambda, en pratique ça donne quoi ?" title="Lien direct vers Je suis un utilisateur lambda, en pratique ça donne quoi ?">​</a></h3><ul><li>J'adhère et donne de mon temps dans une association de quartier qui utilise TiBillet pour gérer ses adhésions : je reçois une carte de membre et l'association me crédite de la monnaie temps.</li><li>Je peux dépenser cette monnaie temps pour réserver des heures d'utilisation d'un fablab ou d'un espace de travail partagé.</li><li>Je scanne ma carte et je peux la recharger en ligne. Je change des euros contre de la monnaie fédérée.</li><li>Je réserve une place dans un festival partenaire de la coopérative qui utilise le système de cashless et de billetterie de TiBillet.</li><li>J'achète le billet, des boissons et de la nourriture sur place avec cette même carte préalablement rechargée : Le festival reçoit de la monnaie fédérée.</li><li>Le festival peut échanger cette monnaie fédérée contre des euros, ou s'en servir pour payer ses prestataires avec tout le bénéfice d'une <a href="https://monnaie-locale-complementaire-citoyenne.net" target="_blank" rel="noopener noreferrer">monnaie locale complémentaire et citoyenne "MLCC"</a>.</li><li>Il me reste de la monnaie sur ma carte. Je peux la dépenser dans un autre lieu qui utilise TiBillet/Fedow ou la garder pour le prochain festival : Elle est valable à vie.</li><li>Je l'oublie dans un tiroir : Je suis régulièrement rappelé à l'utiliser via les newsletters de la fédération qui font la promotion des évènements associatifs et coopératifs du réseau.</li><li>Si ma carte reste inactive pendant un certain temps, la coopérative récupère une partie du contenu du portefeuille et le réinjecte dans le développement du réseau.</li><li>La coopérative se réunit régulièrement pour faire le point sur la circulation des monnaies et choisir les projets dans lesquels réinvestir l'argent récupéré.</li></ul><p>(Exemple possible : 1/3 pour le nœud (organisateur de festival, association...),  1/3 pour un fond commun de soutien aux projets associatifs et coopératifs, 1/3 pour la maintenance et le développement de l'outil.)</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="blockchain-bas-carbone-et-mécanisme-de-confiance--la-preuve-denjeux-pos-et-la-preuve-dautorité-poa-">Blockchain bas carbone et mécanisme de confiance : La preuve d'enjeux (PoS) et la preuve d'autorité (PoA) :<a href="#blockchain-bas-carbone-et-mécanisme-de-confiance--la-preuve-denjeux-pos-et-la-preuve-dautorité-poa-" class="hash-link" aria-label="Lien direct vers Blockchain bas carbone et mécanisme de confiance : La preuve d'enjeux (PoS) et la preuve d'autorité (PoA) :" title="Lien direct vers Blockchain bas carbone et mécanisme de confiance : La preuve d'enjeux (PoS) et la preuve d'autorité (PoA) :">​</a></h3><p>Ou comment répondre à la grande question : <em>Comment faire pour avoir confiance en un système bancaire décentralisé sur lequel repose de l'argent réel ?</em></p><p>[ATTENTION DISCLAIMER PARTIE VULGARISATION TECHNIQUE CRYPTO !]</p><p>Pour créer un système décentralisé mais sécurisé et fiduciaire, le Bitcoin a proposé la preuve de travail (Proof of Work) : Plus on est nombreux à vérifier, plus il est difficile de falsifier le document comptable car il faut convaincre la majorité pour faire consensus.</p><p>Pour encourager le nombre, il est proposé de récompenser les validateurs. Et pour savoir quel validateur va récupérer la récompense, on leur propose une énigme. Celui qui réussit à la résoudre gagne la récompense et valide par la même occasion le bloc de transaction. </p><p>Le reste du groupe vérifie ensuite que ce bloc a bien été validé correctement et tente de résoudre l'énigme suivante. On appelle ça "miner" et cela ne peut se faire qu'à l'aide d'ordinateur très puissants.</p><p>Résultat : c'est super sécurisé car beaucoup de monde vérifie chaque transaction. </p><p>Corollaire : c'est très (trop) énergivore au point d'en être insoutenable. (Et ne parlons même pas des mécanismes de rareté et de spéculation qui finissent par achever ce système à nos yeux...)</p><p>La preuve d'enjeu (Proof of Stake) a été proposée très vite comme une alternative à la preuve de travail (Proof of Work). Dans un système PoS, il n'y a pas de concept de mineurs, de matériel spécialisé ou de consommation massive d'énergie. </p><p>Pour être un validateur, vous devez prouver que vous avez intérêt à ce que tout le système reste bien valide. Chez <em>Ethereum</em>, la deuxième blockchain la plus valorisée, vous devez verrouiller une quantité variable de capital comme preuve d'intérêt et vous êtes récompensé en fonction de cette quantité verrouillée.</p><p>Ce système est beaucoup moins énergivore, mais il a tendance à favoriser une oligarchie car n'importe qui peut devenir un nœud : il suffit d'être riche...</p><p>Avec Fedow, c'est un peu différent. Il est necéssaire de vérifier votre identité comme celle de vos utilisateurs. La preuve d'enjeu, c'est vous ! </p><p>Cette preuve d'enjeu, c'est la quantité de monnaie fédéré que vous récolterez en installant TiBillet/Fedow. Vous avez intérêt à ce que les comptes soient bien valide car vous en possédez une partie des actifs.</p><p>Dans ce système, il n'y a pas de concept de mineurs, de matériel spécialisé ou de consommation massive d'énergie. Tout ce dont vous avez besoin, c'est d'un ordinateur ordinaire sous linux.</p><p>Et cet ordinateur, vous l'avez déjà : il héberge votre instance TiBillet. Validez la co-optation ou créez votre réseau Fedow, et votre instance TiBillet devient un nœud  qui valide les transactions de tout le réseau en toute transparence.</p><p>La preuve d'enjeu, c'est votre instance liée à votre identité. Plus exactement, ce mécanisme de consensus dérivé du <em>PoS</em> est appelé une <a href="https://academy.binance.com/fr/articles/proof-of-authority-explained?hide=stickyBar" target="_blank" rel="noopener noreferrer">preuve d'autorité</a> (PoA).</p><p>En pratique : </p><ul><li>Créez ou rejoignez le nœud primaire Fedow de votre région ou réseau.</li><li>Une fois votre identité validée, votre instance devient un nœud et vous validez les transactions avec les autres validateurs du réseau fédéré.</li><li>Chaque nœud participant fait de même. Si tout le monde est d'accord, alors la transaction est validée. Tout le monde à une copie du même livre de compte : le réseau est résilient aux pannes, décentralisé, immuable et transparent.</li><li>En contrepartie de votre participation à la sécurisation du livre de compte commun, vous recevrez une partie des frais prélevés lors de la revalorisation de la monnaie fondante (le <a href="https://fr.wikipedia.org/wiki/Demeurage_(finance)" target="_blank" rel="noopener noreferrer">demeurage</a>).</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="cest-quoi-la-différence-finalement-avec-une-autre-blockchain-">C'est quoi la différence finalement avec une autre blockchain ?<a href="#cest-quoi-la-différence-finalement-avec-une-autre-blockchain-" class="hash-link" aria-label="Lien direct vers C'est quoi la différence finalement avec une autre blockchain ?" title="Lien direct vers C'est quoi la différence finalement avec une autre blockchain ?">​</a></h3><p>Contrairement à la majorité des crypto-actifs, il n'y a pas de <strong>blocks</strong> fraîchement créés dans le cadre de la récompense pour les validateurs. La monnaie fédérée est émise dans une économie réelle. </p><p>Cette émission est réalisée par les adhérents et utilisateurs de vos lieux lorsqu'ils échangent de vrais euros pour recharger leur carte cashless de festival ou d'adhésion associative.</p><p>La monnaie est bien réelle. Elle n'est pas volatile. Le moteur de l'application et le consensus de validation s'assurent qu'il existe et existera toujours 1€ de disponible en banque pour 1 <em>token</em> fédéré.</p><p>Nous ne sommes pas une startup. Notre but n'est pas de lever des fonds en crypto-actif ou d'entrer en bourse. Nous ne prélevons pas de pourcentage sur les transactions dans le but de revendre les tokens que nous créons nous même sur un marché spéculatif.</p><p>Nous construisons TiBillet/Fedow au sein de tiers-lieux populaires, de coopératives et associations culturelles dans le but de construire des communs.</p><p>Nous ne souhaitons pas <strong>un</strong> Fedow pour contrôler un actif financier, mais <strong>des</strong> Fedows pour des mises en réseaux de lieux.</p><p>Nous sommes une société coopérative d'intérêt collectif, et nous invitons tous les acteurs de TiBillet à devenir sociétaires pour décider ensemble de l'évolution du projet.</p><p>Nous sommes <a href="https://codecommun.coop" target="_blank" rel="noopener noreferrer">CodeCommun.Coop</a>, Venez <a href="https://discord.gg/ecb5jtP7vY" target="_blank" rel="noopener noreferrer">discuter</a> avec nous !</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="projet-construit-financé-et-testé-avec-le-soutien-de-">Projet construit, financé et testé avec le soutien de :<a href="#projet-construit-financé-et-testé-avec-le-soutien-de-" class="hash-link" aria-label="Lien direct vers Projet construit, financé et testé avec le soutien de :" title="Lien direct vers Projet construit, financé et testé avec le soutien de :">​</a></h3><ul><li><a href="https://codecommun.coop" target="_blank" rel="noopener noreferrer">Coopérative Code Commun</a></li><li><a href="https://www.communecter.org/costum/co/index/slug/LaReunionDesTiersLieux/#welcome" target="_blank" rel="noopener noreferrer">la Réunion des Tiers-lieux</a></li><li><a href="https://www.laraffinerie.re/" target="_blank" rel="noopener noreferrer">La Raffinerie</a></li><li><a href="https://www.communecter.org/" target="_blank" rel="noopener noreferrer">Communecter</a></li><li><a href="https://bisik.re" target="_blank" rel="noopener noreferrer">Le Bisik</a></li><li><a href="https://www.jetbrains.com/community/opensource/#support" target="_blank" rel="noopener noreferrer">Jetbrain</a> supports non-commercial open source projects.</li><li>Le Manapany Festival</li><li>Le Demeter</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="contact-">Contact :<a href="#contact-" class="hash-link" aria-label="Lien direct vers Contact :" title="Lien direct vers Contact :">​</a></h2><ul><li><a href="https://discord.gg/ecb5jtP7vY" target="_blank" rel="noopener noreferrer">https://discord.gg/ecb5jtP7vY</a></li><li><a href="https://chat.tiers-lieux.org/channel/TiBillet" target="_blank" rel="noopener noreferrer">https://chat.tiers-lieux.org/channel/TiBillet</a></li><li><a href="https://chat.communecter.org/channel/Tibillet" target="_blank" rel="noopener noreferrer">https://chat.communecter.org/channel/Tibillet</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sources-veille-et-inspirations">Sources, veille et inspirations<a href="#sources-veille-et-inspirations" class="hash-link" aria-label="Lien direct vers Sources, veille et inspirations" title="Lien direct vers Sources, veille et inspirations">​</a></h3><p>Sur la supercherie ultra libérale du web3 et des applications décentralisés (Dapp) :</p><ul><li><a href="https://web3isgoinggreat.com/" target="_blank" rel="noopener noreferrer">https://web3isgoinggreat.com/</a></li></ul><p>Sur la monnaie fondante et son auteur : </p><ul><li><a href="https://fr.wikipedia.org/wiki/Monnaie_fondante" target="_blank" rel="noopener noreferrer">https://fr.wikipedia.org/wiki/Monnaie_fondante</a></li><li><a href="https://fr.wikipedia.org/wiki/%C3%89conomie_libre" target="_blank" rel="noopener noreferrer">https://fr.wikipedia.org/wiki/%C3%89conomie_libre</a></li></ul><p>Sur les relations entre consommation, écologie et crypto : </p><ul><li><a href="https://app.wallabag.it/share/64e5b408043f56.08463016" target="_blank" rel="noopener noreferrer">https://app.wallabag.it/share/64e5b408043f56.08463016</a></li><li><a href="https://www.nextinpact.com/article/72029/ia-crypto-monnaie-publicite-chiffrement-lusage-numerique-face-a-son-empreinte-ecologique" target="_blank" rel="noopener noreferrer">https://www.nextinpact.com/article/72029/ia-crypto-monnaie-publicite-chiffrement-lusage-numerique-face-a-son-empreinte-ecologique</a></li></ul><p>Sur les consensus de validation de blockchain :</p><ul><li><a href="https://academy.binance.com/fr/articles/proof-of-authority-explained?hide=stickyBar" target="_blank" rel="noopener noreferrer">https://academy.binance.com/fr/articles/proof-of-authority-explained?hide=stickyBar</a></li><li><a href="https://github.com/P2Enjoy/proof-of-consensus" target="_blank" rel="noopener noreferrer">https://github.com/P2Enjoy/proof-of-consensus</a></li><li><a href="https://www.geeksforgeeks.org/proof-of-stake-pos-in-blockchain/?ref=lbp" target="_blank" rel="noopener noreferrer">https://www.geeksforgeeks.org/proof-of-stake-pos-in-blockchain/?ref=lbp</a></li><li><a href="https://www.geeksforgeeks.org/delegated-proof-of-stake/?ref=lbp" target="_blank" rel="noopener noreferrer">https://www.geeksforgeeks.org/delegated-proof-of-stake/?ref=lbp</a></li></ul>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>openwallet</category>
            <category>caisse enregistreuse</category>
            <category>tibillet</category>
            <category>réunion des tiers-lieux</category>
            <category>RTLx</category>
            <category>économie sociale et solidaire</category>
            <category>ess</category>
            <category>coopérative</category>
            <category>scic</category>
        </item>
        <item>
            <title><![CDATA[Fédération 4 - Design]]></title>
            <link>https://codecommun.coop/blog/federation-part4</link>
            <guid>https://codecommun.coop/blog/federation-part4</guid>
            <pubDate>Wed, 05 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Fédérons TiBillet, quatrième partie, parlons Design.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="/img/federons/design_head.jpg" src="/assets/images/design_head-1b55167cafbea49626f3c84620ae7ca0.jpg" width="640" height="360" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="design-billetterie">Design Billetterie<a href="#design-billetterie" class="hash-link" aria-label="Lien direct vers Design Billetterie" title="Lien direct vers Design Billetterie">​</a></h2><p>TiBillet est construit sur un modèle de SaaS (Software as a service) : Un serveur peut héberger plusieurs instances de
projets.</p><p>Un serveur peut être monté pour un territoire. Chaque lieu qui souhaite participer à un agenda commun peut rejoindre le
serveur.</p><p>Qu'il soit organisateur, artiste, ou porteur de plusieurs projets, chaque évènement sera visible sur sa page personnelle
et sur l'agenda commun.</p><p>D'une pierre deux coups, vendez vos billets en ligne et participez à un agenda commun !</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="jpg-">JPG :<a href="#jpg-" class="hash-link" aria-label="Lien direct vers JPG :" title="Lien direct vers JPG :">​</a></h3><p><img loading="lazy" alt="/img/federons/Design-billetterie-sept23.jpg" src="/assets/images/Design-billetterie-sept23-da48b24ac864a39c44544fa5c54a3bd3.jpg" width="1920" height="1150" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="svg-et-fichier-excalidraw">SVG et fichier excalidraw:<a href="#svg-et-fichier-excalidraw" class="hash-link" aria-label="Lien direct vers SVG et fichier excalidraw:" title="Lien direct vers SVG et fichier excalidraw:">​</a></h2><ul><li><a target="_blank" href="/assets/files/Design-billetterie-sept23-d1e8a3a6a9c7365c519f3a327c731be3.svg">Design-billetterie-sept23.svg</a></li><li><a target="_blank" href="/assets/files/Design-billetterie-sept23-03a6ba6c4943c32b6999bdadc3bcccdb.excalidraw">Design-billetterie-sept23.excalidraw</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="document-de-travail-">Document de travail :<a href="#document-de-travail-" class="hash-link" aria-label="Lien direct vers Document de travail :" title="Lien direct vers Document de travail :">​</a></h2><ul><li><a href="https://excalidraw.com/#room=74a2ecdff0977018a774,3LBe2H4TOdwL7Zozq0sgzg" target="_blank" rel="noopener noreferrer">Front Billetterie Excalidraw</a></li><li><a href="https://github.com/orgs/TiBillet/projects" target="_blank" rel="noopener noreferrer">Tâches et Kanban</a></li></ul>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>openwallet</category>
            <category>caisse enregistreuse</category>
            <category>tibillet</category>
            <category>réunion des tiers-lieux</category>
            <category>RTLx</category>
            <category>économie sociale et solidaire</category>
            <category>ess</category>
            <category>coopérative</category>
            <category>scic</category>
        </item>
        <item>
            <title><![CDATA[Fédération 3 - Structure et historique]]></title>
            <link>https://codecommun.coop/blog/federation-part3</link>
            <guid>https://codecommun.coop/blog/federation-part3</guid>
            <pubDate>Tue, 06 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Fédérons TiBillet, troisième partie.]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="/img/federons/04-start_fede_notitle.png" src="/assets/images/04-start_fede_notitle-a7835c7c58805d2634e48ad92dfbdf16.png" width="1005" height="501" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="historique-et-origine">Historique et origine<a href="#historique-et-origine" class="hash-link" aria-label="Lien direct vers Historique et origine" title="Lien direct vers Historique et origine">​</a></h2><p>A l'origine du projet TiBillet, il y a le Manapany Festival et l'association organisatrice : Les 3Peaks.
Nous étions une bande de joyeux.ses bidouilleur.ses.s et développeur.ses.s bénévoles. Nous avions décidé de
créer nos propres outils numériques principalement pour une raison : nous avions envie d'apprendre à le faire nous
même :)</p><p>En dehors du festival annuel, l'association hébergeait un café associatif ouvert régulièrement et organisait des
évènements culturels mensuels avec une contrainte : si l'entrée était libre à tous et toutes, il nous fallait un outil
pour gérer les adhésions associatives et les paiements des consommations.
Pourquoi ne pas continuer à utiliser la carte NFC cashless du festival tout au long de l'année ?</p><p>En même temps, nous regardions comment les solutions existantes des professionnels du secteur fonctionnaient : Carte et
bracelets NFC à usage unique, remboursement limité dans le temps, prix prohibitif pour l'organisateur et le public...
Nous ne voulions vraiment pas reproduire un modèle qui semblait être juste un moyen de faire payer plus
les festivaliers...</p><p>Voici que la carte d'adhésion 3Peask est née : Valide à vie, gratuite, rechargeable en ligne, remboursable à tout
moment, utilisable au café associatif toute l'année comme au festival, elle permettait de gérer un point de vente et
une caisse enregistreuse tout en s'assurant que le membre associatif était à jour de sa cotisation.</p><p>Et ça a cartonné ! Avoir plus de 800 membres à l'année fut une expérience très enrichissante. Nous
développions TiBillet au fur et à mesure des besoins, des remarques et des idées de nos membres : nous codons un
outil que nous utilisons au quotidien.</p><p>Aujourd'hui (Juin 2023), après 6 ans de développement, la carte TiBillet permet tout ceci :</p><ul><li>Carte d'adhésion associative et d'abonnement.</li><li>Portefeuille pour paiement sans contact (Cashless) :<ul><li>En euro rechargeable en ligne et/ou sur place.</li><li>En points cadeau, dans le but de comptabiliser les ventes offertes.</li><li>En monnaie temps, pour une valorisation du bénévolat.</li></ul></li><li>Système de prise de commande avec imprssion de ticket en cuisine.</li><li>Billetterie en ligne avec paiement par carte bancaire via Stripe.</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="le-pôle-régional-des-musiques-actuelles">Le Pôle régional des musiques actuelles<a href="#le-pôle-régional-des-musiques-actuelles" class="hash-link" aria-label="Lien direct vers Le Pôle régional des musiques actuelles" title="Lien direct vers Le Pôle régional des musiques actuelles">​</a></h2><p>Lors des rencontres de la filière culturelle organisée en 2016 par le pôle régional des musiques actuelles de la
réunion (PRMA), et le ministère de la culture, le projet TiBillet est présenté et reçoit un accueil très positif.
Une petite subvention est alors débloquée pour réaliser un "Proof of concept" en dehors du festival de Manapany :
TiBillet s'installe au Bisik, un lieu culturel à l'est de la réunion.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="communnecterorg">Communnecter.org<a href="#communnecterorg" class="hash-link" aria-label="Lien direct vers Communnecter.org" title="Lien direct vers Communnecter.org">​</a></h2><p>En 2020, nous avons rencontré l'équipe de Communecter.org, un réseau social libre et open source.
Un appel à projet venant du secrétariat général aux affaires régionales de la réunion (SGAR) est lancé et une
<a href="https://docs.google.com/presentation/d/1RthbdQw4ksZA_ogab_UoFmW-q_lrtjEJ_uMhqw_Brdo/edit?usp=sharing" target="_blank" rel="noopener noreferrer">demande de subvention</a>
commune est rédigée.
Succès !</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="la-réunion-des-tiers-lieux">La Réunion des Tiers Lieux.<a href="#la-réunion-des-tiers-lieux" class="hash-link" aria-label="Lien direct vers La Réunion des Tiers Lieux." title="Lien direct vers La Réunion des Tiers Lieux.">​</a></h2><p>Début 2022, le collectif "La Réunion des Tiers Lieux" (RTLx) se construit et propose des chantiers de travail
collaboratif.
TiBillet est utilisé à la Raffinerie de Savanna, un tiers lieu éco-culturel et artistique à Saint Paul.
RTLx se propose de financer une partie du développement de TiBillet pour l'adapter aux besoins des tiers lieux.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="fond-propre">Fond propre<a href="#fond-propre" class="hash-link" aria-label="Lien direct vers Fond propre" title="Lien direct vers Fond propre">​</a></h2><p>Avec l'aide du dossier SGAR/Communnecter et de RTLx, l'équipe de bénévole qui construit TiBillet se motive pour passer
au niveau supérieur. Des fonds propres sont investis, du matériel est acheté et zou !</p><p>Au menu : Portefeuille, agenda et billetterie fédéré.</p><p>L'idée : Utiliser la même carte d'adhésion sur tout un territoire, réer des monnaies locales à la demande et donner à
chacun la possibilité d'auto héberger ses données.</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="argent-public--code-public-">Argent public ? Code Public !<a href="#argent-public--code-public-" class="hash-link" aria-label="Lien direct vers Argent public ? Code Public !" title="Lien direct vers Argent public ? Code Public !">​</a></h4><p>Car nous pensons que le modèle coopératif vaut mieux qu'une startup, nous créons alors une Société Coopérative d'Intérêt
Collectif (SCIC). Orientée développement de logiciel libre, la coopérative Code Commun est née.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="et-en-pratique-">Et en pratique ?<a href="#et-en-pratique-" class="hash-link" aria-label="Lien direct vers Et en pratique ?" title="Lien direct vers Et en pratique ?">​</a></h2><p>En pratique, les outils TiBillet sont expérimentés dans de de nouveaux lieux et deux grands dépôts de code sont
maintenus pour favoriser la contribution.</p><p>On vous invite à farfouiller dedans, et on vous donne rendez vous
dans les prochaines notes de blogs pour les détails !</p><ul><li><a href="https://github.com/TiBillet/" target="_blank" rel="noopener noreferrer">TiBillet</a></li><li><a href="https://github.com/CoopCodeCommun/" target="_blank" rel="noopener noreferrer">Code Commun</a></li></ul>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>openwallet</category>
            <category>caisse enregistreuse</category>
            <category>tibillet</category>
            <category>réunion des tiers-lieux</category>
            <category>RTLx</category>
            <category>économie sociale et solidaire</category>
            <category>ess</category>
            <category>coopérative</category>
            <category>scic</category>
        </item>
        <item>
            <title><![CDATA[Fédération 2 - L'agenda partagé]]></title>
            <link>https://codecommun.coop/blog/federation-part2</link>
            <guid>https://codecommun.coop/blog/federation-part2</guid>
            <pubDate>Mon, 10 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Fédérons TiBillet, première partie.]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="deconstruire-pour-decentraliser">Deconstruire pour decentraliser.<a href="#deconstruire-pour-decentraliser" class="hash-link" aria-label="Lien direct vers Deconstruire pour decentraliser." title="Lien direct vers Deconstruire pour decentraliser.">​</a></h2><p>Fini le gros bloc PHP.
La billetterie, qui s'occupe de gérer
les paiements en ligne (recharge cashless via stripe),
les réservations et les ventes de billet
a été complètement repensée.</p><p><img loading="lazy" alt="/img/federons/06-blockcentral.png" src="/assets/images/06-blockcentral-c36d5775e1f74ea5dbbed9ad636c5c1e.png" width="763" height="516" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="première-étape--lagenda-fédéré">Première étape : L'agenda fédéré.<a href="#première-étape--lagenda-fédéré" class="hash-link" aria-label="Lien direct vers Première étape : L'agenda fédéré." title="Lien direct vers Première étape : L'agenda fédéré.">​</a></h2><p>En avant avec Django ! Le framework web en Python est déja utilisé coté cashless,
nous avons tout repensé depuis la base pour faire un modèle
dit de SaaS (Software as a service).
L'idée est de pouvoir utiliser la puissance combinée du moteur
de schéma PostgreSQL pour des applications multi-tenant.</p><p>Derrière ce vocabulaire un peu barbare se cache une idée toute
simple : <strong>Un seul serveur pour gérer plusieurs instances</strong> qui se partagent des <strong>informations communes.</strong></p><p>Autrement dit, plutôt que d'avoir
plein de serveurs séparés qui stockent chacun peu ou prou
les mêmes données (carte, utilisateurs, évènements, etc... ),
nous mutualisons tout un territoire sur une seule "Stack".</p><p><img loading="lazy" alt="/img/federons/07-tenant-part1.png" src="/assets/images/07-tenant-part1-32c7118ff12f74b4e3368b090331f8a2.png" width="862" height="862" class="img_ev3q"></p><p>Certaines données, comme
les utilisateurs et l'agenda sont
partagées entre tous les acteurs.</p><p>D'autre sont uniques
à chaque instance :
Évènements, adhésions, information générales, cartes cashless
etc ...</p><p><img loading="lazy" alt="/img/federons/08-samedata.png" src="/assets/images/08-samedata-d02c89a2d4098645a57caa17f5273153.png" width="900" height="535" class="img_ev3q"></p><p>Mais surtout, ce système nous permet de faire une présentation
de TOUS les évènements présents dans l'instance:
Nous l'avions nommé la META, mais bon... Yen a un qui nous
a piqué le nom xD ...</p><p>Et hop ! Agenda Fédéré !</p><p><img loading="lazy" alt="/img/federons/09-agenda.png" src="/assets/images/09-agenda-84b1465c66c5ac26bbba4a57219b3c03.png" width="997" height="676" class="img_ev3q"></p><p>Ici nous parlons de concerts et d'artiste.
Mais il est tout à fait possible d'imaginer des réunions,
des marchés d’artisans, des festivals,
des locations de salle de répetes, des randonnées
etc etc ...</p><p>C'est un moteur évènementiel de données partagées.
Les idées qui permettent de l'exploiter sont nombreuses !</p><p>À l'heure où nous écrivons ces lignes
(octobre 2022), ce système est prêt
et mis en production depuis quelques jours.</p><p>A vous de le tester !
Venez discuter avec nous pour vos retours et vos idées !</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="et-ma-carte-dans-tout-ça-">Et ma carte dans tout ça ?<a href="#et-ma-carte-dans-tout-ça-" class="hash-link" aria-label="Lien direct vers Et ma carte dans tout ça ?" title="Lien direct vers Et ma carte dans tout ça ?">​</a></h2><p><img loading="lazy" alt="/img/federons/10-rapport.png" src="/assets/images/10-rapport-970f0ed4e826a603382f615f4a9473a0.png" width="734" height="495" class="img_ev3q"></p><p>On y vient !
C'est la suite logique, non ?
Et si nous ajoutions dans les données communes les
cartes NFC déja utilisées par les lieux ?</p><p><img loading="lazy" alt="/img/federons/11-cartecashless.png" src="/assets/images/11-cartecashless-c3dc699e6dd3807fd2238cc4489b4c67.png" width="465" height="419" class="img_ev3q"></p><p>Après l'agenda, libérons les cartes NFC !</p><p>À suivre dans la 3ᵉ partie ...</p>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>openwallet</category>
            <category>caisse enregistreuse</category>
            <category>tibillet</category>
            <category>réunion des tiers-lieux</category>
            <category>RTLx</category>
            <category>économie sociale et solidaire</category>
            <category>ess</category>
        </item>
        <item>
            <title><![CDATA[Fédération 1 - Introduction]]></title>
            <link>https://codecommun.coop/blog/federation-part1</link>
            <guid>https://codecommun.coop/blog/federation-part1</guid>
            <pubDate>Sun, 09 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Fédérons TiBillet, première partie.]]></description>
            <content:encoded><![CDATA[<p>Cet article est un tout petit peu technique, mais tout à fait accessible à quiconque souhaite
plus d'information sur le chantier en cours.</p><p>Avec le collectif <strong>La Réunion des Tiers Lieux</strong> (RTL) se lance un grand chantier autour des outils
communs. Nous détaillons ici une partie, celle de la construction et la decentralisation d'un<br>
<!-- -->agenda et d'un portefeuille cashless partagé à tout un territoire.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Lien direct vers Introduction" title="Lien direct vers Introduction">​</a></h2><p>Aujourd'hui, lorsque l'on veut organiser
des évènements, beaucoup de solutions existent.</p><p>Et rare sont les routes pour
communiquer entre ces solutions : il faut
souvent apprendre à jongler.</p><p><img loading="lazy" alt="/img/federons/01-jongler.png" src="/assets/images/01-jongler-cf0e5024d9ebbc7a15e8e783eec8df56.png" width="819" height="438" class="img_ev3q"></p><p>De plus, chaque acteur de la filière
s'affaire souvent dans son coin, multipliant ainsi
les données souvent redondantes.</p><p>Parfois même, nous alimentons des plateformes
silo qui enferment et captent nos données sans
avoir la main sur la visibilité de nos actions :
nous sommes souvent devenus dépendant des algorithmes
des GAFAM qui décident de notre visibilité.</p><p><img loading="lazy" alt="/img/federons/02-silo.png" src="/assets/images/02-silo-14978438f18a13d21deabcf40135b9d0.png" width="1049" height="780" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tibillet-">TiBillet ?<a href="#tibillet-" class="hash-link" aria-label="Lien direct vers TiBillet ?" title="Lien direct vers TiBillet ?">​</a></h2><p>Avec TiBillet, nous participons aussi malgré nous à cette isolation.
Depuis 2010, nous construisons des outils numériques pour l'évènementiel culturel :
Chaque lieu peut posseder une carte d'adhésion et de paiement sans contact (Cashless) et son instance de billetterie
avec son agenda.</p><p>Le public peut réserver sa place de concert et recharger sa carte en ligne.
Chaque lieu à son instance, ses membres et utilisateurs bien à lui.</p><p>Et sur un petit territoire comme la Réunion, c'est souvent les mêmes
utilisateurs ...</p><p><img loading="lazy" alt="/img/federons/03-multiples.png" src="/assets/images/03-multiples-e3f6af5180f6f1154b2b54aa03c013fc.png" width="783" height="673" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="au-commencement-">Au commencement ...<a href="#au-commencement-" class="hash-link" aria-label="Lien direct vers Au commencement ..." title="Lien direct vers Au commencement ...">​</a></h2><p>Au tout début, la "Stack' TiBillet (ensemble de boites techniques)
était très centralisé :</p><p><img loading="lazy" alt="/img/federons/05-stackblock.png" src="/assets/images/05-stackblock-94fffbe18d1e6194eb5c0e433e4f4be2.png" width="862" height="1045" class="img_ev3q"></p><p>En 2018 vient un premier intérêt
public avec l'aide du PRMA
(Pole Régional des musique actuelles)
de la Réunion.</p><p>On commence à penser fort à
libérer le code et créer une
coopérative pour supporter
le développement.</p><p>Puis vient la rencontre avec les
tiers-lieux de La Raffinerie, de Vavang'Art,
et avec le réseau social libre Communecter.</p><p>Le projet de portefeuille fédéré
de RTL ne fait que confirmer
nos envies communes et nous donne les moyens
de développer un nouveau modèle.</p><p>Aujourd'hui (Octobre 2022), le chantier à beaucoup avancé.
Il reste beaucoup à faire et <a href="https://tibillet.org/roadmap/" target="_blank" rel="noopener noreferrer">la feuille de route</a>
commence à bien se dessiner :</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="réunion-des-tiers-lieux">Réunion des Tiers-Lieux<a href="#réunion-des-tiers-lieux" class="hash-link" aria-label="Lien direct vers Réunion des Tiers-Lieux" title="Lien direct vers Réunion des Tiers-Lieux">​</a></h2><p>Avec la Réunion des Tiers-lieux, nous avons lancé
le chantier Outil Commun pour fédérer les pratiques,
éviter de multiplier les données et mutualiser le matériel.</p><p>Du côté de la team TiBillet, nous nous sommes affairés à construire
les briques d'un logiciel libre utilisable par tout un territoire et depuis plusieurs mois, nous changeons le moteur de
notre application pour pouvoir construire un outil commun
et fédéré de billetterie, d'agenda culturel et de cashless.</p><p><img loading="lazy" alt="/img/federons/04-start_fede.png" src="/assets/images/04-start_fede-f6f6016596b3da3d772f0170f9cd115a.png" width="1005" height="608" class="img_ev3q"></p><p>Pour réussir à construire TiBillet en outil fédéré,
techniquement, il a fallu changer pas mal de choses.
Et pas uniquement notre vision globale :)</p><p>Dans les grandes lignes, nous souhaitons séparer le développement
et l'expérimentation en trois grandes étapes.</p><ul><li><a href="/blog/federation-part2">L'agenda partagé</a></li><li>Le portefeuille fédéré</li><li>Les monnaies locales</li></ul><p>À suivre dans la <a href="/blog/federation-part2">deuxième partie</a> ...</p>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>openwallet</category>
            <category>caisse enregistreuse</category>
            <category>tibillet</category>
            <category>réunion des tiers-lieux</category>
            <category>RTLx</category>
            <category>économie sociale et solidaire</category>
            <category>ess</category>
        </item>
        <item>
            <title><![CDATA[RTL - Compte rendu 03-10-2022]]></title>
            <link>https://codecommun.coop/blog/rtl-cr</link>
            <guid>https://codecommun.coop/blog/rtl-cr</guid>
            <pubDate>Mon, 03 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Chantier en cours autour d'une réfléxion carte TiBillet partagée entre plusieurs lieux.]]></description>
            <content:encoded><![CDATA[<p>Dans le cardre du chantier Outil Commun de la Réunion des Tiers-Lieux (RTL), nous engageons une réfléxion autour d'une
carte TiBillet partagée entre plusieurs Tiers-lieux.</p><p><img loading="lazy" alt="/img/cr_220310_portefeuille_partage/FEDERONS-01.png" src="/assets/images/FEDERONS-01-4effa6df6e98617768f269293ad2c1b5.png" width="1276" height="1003" class="img_ev3q"></p><p><img loading="lazy" alt="/img/cr_220310_portefeuille_partage/FEDERONS-02.png" src="/assets/images/FEDERONS-02-36321c0fd8e003e94c39358ff1bb67b2.png" width="1276" height="1003" class="img_ev3q"></p><p><img loading="lazy" alt="/img/cr_220310_portefeuille_partage/FEDERONS-03.png" src="/assets/images/FEDERONS-03-79f9ac06a1db4d3f39fef42d592120ce.png" width="1276" height="1003" class="img_ev3q"></p><p>Une <a href="https://nuage.tierslieux.re/s/8JwiGeWJ9bdKzkr" target="_blank" rel="noopener noreferrer">roadmap</a> a été travaillée avec un résumé des budgets et des
finances.</p><p>Pour ceux qui veulent aller vraiment loin dans la réflexion, nous avons créé un document qui recense un peu de
littérature sur tout ce qui touche de près ou de loin à ce chantier.</p><p>C'est pensé comme une bibliothèque commune : Sentez-vous libre de rajouter vos articles et vos connaissances :
<a href="https://nuage.tierslieux.re/s/sMPScgSPNgwRrWD" target="_blank" rel="noopener noreferrer">https://nuage.tierslieux.re/s/sMPScgSPNgwRrWD</a></p><p>Prochaine réunion dans le lundi 17 octobre 2022, sur le Discord de la coopérative TiBillet.
Ordre du jour : Portefeuille fédéré -&gt; Remontez-nous vos idées et besoins !</p>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>openwallet</category>
            <category>caisse enregistreuse</category>
            <category>tibillet</category>
            <category>réunion des tiers-lieux</category>
            <category>RTLx</category>
            <category>économie sociale et solidaire</category>
            <category>ess</category>
        </item>
        <item>
            <title><![CDATA[Ecosocialisme numérique]]></title>
            <link>https://codecommun.coop/blog/ecosocialisme_numerique</link>
            <guid>https://codecommun.coop/blog/ecosocialisme_numerique</guid>
            <pubDate>Thu, 15 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Chantier en cours autour d'une réfléxion carte TiBillet partagée entre plusieurs lieux.]]></description>
            <content:encoded><![CDATA[<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">Extrait de https://framablog.org/2022/08/17/ecosocialisme-numerique-une-alternative-aux-big-tech</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Louis Derrac, Michael Kwet.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copier le code" title="Copier" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="laccord-sur-les-technologies-numériques">L’accord sur les Technologies Numériques<a href="#laccord-sur-les-technologies-numériques" class="hash-link" aria-label="Lien direct vers L’accord sur les Technologies Numériques" title="Lien direct vers L’accord sur les Technologies Numériques">​</a></h2><p>Les grandes entreprises technologiques, la propriété intellectuelle et la propriété privée des moyens de calcul sont
profondément ancrées dans la société numérique et ne peuvent être éteintes du jour au lendemain. Ainsi, pour remplacer
le capitalisme numérique par un modèle socialiste, nous avons besoin d’une transition planifiée vers le socialisme
numérique.</p><p>Les écologistes ont proposé de nouveaux “accords” décrivant la transition vers une économie verte. Les propositions
réformistes comme le Green New Deal américain et le Green Deal européen fonctionnent dans un cadre capitaliste qui
conserve les méfaits du capitalisme, comme la croissance terminale, l’impérialisme et les inégalités structurelles. En
revanche, les modèles écosocialistes, tels que le Red Deal de la Nation Rouge, l’Accord de Cochabamba et la Charte de
justice climatique d’Afrique du Sud, offrent de meilleures alternatives. Ces propositions reconnaissent les limites de
la croissance et intègrent les principes égalitaires nécessaires à une transition juste vers une économie véritablement
durable.</p><p>Cependant, ni ces accords rouges ni ces accords verts n’intègrent de plans pour l’écosystème numérique, malgré sa
pertinence centrale pour l’économie moderne et la durabilité environnementale. À son tour, le mouvement pour la justice
numérique a presque entièrement ignoré les propositions de décroissance et la nécessité d’intégrer leur évaluation de
l’économie numérique dans un cadre écosocialiste. La justice environnementale et la justice numérique vont de pair, et
les deux mouvements doivent s’associer pour atteindre leurs objectifs.</p><p>À cet effet, je propose un Accord sur les Technologies Numériques écosocialiste qui incarne les valeurs croisées de
l’anti-impérialisme, de la durabilité environnementale, de la justice sociale pour les communautés marginalisées, de
l’autonomisation des travailleurs, du contrôle démocratique et de l’abolition des classes. Voici dix principes pour
guider un tel programme :</p><ol><li>Veiller à ce que l’économie numérique ne dépasse pas les limites sociales et planétaires.</li><li>Supprimer progressivement la propriété intellectuelle.</li><li>Socialiser l’infrastructure physique.</li><li>Remplacer les investissements privés de production par des subventions et une production publiques.</li><li>Décentraliser Internet.</li><li>Socialiser les plateformes.</li><li>Socialiser l’intelligence numérique et les données.</li><li>Interdire la publicité forcée et le consumérisme des plateformes.</li><li>Remplacer l’armée, la police, les prisons et les appareils de sécurité nationale par des services de sûreté et de
sécurité gérés par les communautés.</li><li>Mettre fin à la fracture numérique.</li></ol><p>Source :</p><ul><li><a href="https://longreads.tni.org/digital-ecosocialism" target="_blank" rel="noopener noreferrer">https://longreads.tni.org/digital-ecosocialism</a></li><li><a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3965128" target="_blank" rel="noopener noreferrer">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3965128</a></li><li><a href="https://framablog.org/2022/08/17/ecosocialisme-numerique-une-alternative-aux-big-tech/#easy-footnote-bottom-11-28126" target="_blank" rel="noopener noreferrer">https://framablog.org/2022/08/17/ecosocialisme-numerique-une-alternative-aux-big-tech/#easy-footnote-bottom-11-28126</a></li></ul>]]></content:encoded>
            <category>Écosocialisme</category>
            <category>logiciel libre</category>
            <category>floss</category>
        </item>
        <item>
            <title><![CDATA[Liens utiles]]></title>
            <link>https://codecommun.coop/blog/link</link>
            <guid>https://codecommun.coop/blog/link</guid>
            <pubDate>Thu, 01 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Chantier en cours autour d'une réfléxion carte TiBillet partagée entre plusieurs lieux.]]></description>
            <content:encoded><![CDATA[<p>Ce billet de blog n'en est pas vraiment un. C'est un recceuil de lien qui nous plait, qui nous inspire, ou qui nous
remets en questions sur nos pratiques.</p><p>N'y voyez pas forcément une adhésion à chaque parti pris (Il y a par exemple des articles pros et scèptiques sur les
cryptoactifs...),
mais je ne doute pas que vous saurez deviner de quel bord nous penchons.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="fédérations">Fédérations<a href="#fédérations" class="hash-link" aria-label="Lien direct vers Fédérations" title="Lien direct vers Fédérations">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fediverse">Fediverse<a href="#fediverse" class="hash-link" aria-label="Lien direct vers Fediverse" title="Lien direct vers Fediverse">​</a></h3><p>Le Fediverse est un réseau social multiforme qui repose sur une fédération de serveurs interconnectés. C’est un
phénomène assez jeune encore, mais dont la croissance suscite déjà l’intérêt et des questionnements.</p><p><a href="https://framablog.org/2021/01/26/le-fediverse-et-lavenir-des-reseaux-decentralises/" target="_blank" rel="noopener noreferrer">https://framablog.org/2021/01/26/le-fediverse-et-lavenir-des-reseaux-decentralises/</a></p><p><a href="https://andre-ani.fr/divers-informatique/quest-ce-que-le-fediverse/" target="_blank" rel="noopener noreferrer">https://andre-ani.fr/divers-informatique/quest-ce-que-le-fediverse/</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="communecter">Communecter<a href="#communecter" class="hash-link" aria-label="Lien direct vers Communecter" title="Lien direct vers Communecter">​</a></h3><p>Communecter est un partenaire de longue date. Plongez dans leurs outils !</p><p><a href="https://peertube.communecter.org/videos/watch/00b4cc60-7d88-4b23-a775-b5bc69a1664e" target="_blank" rel="noopener noreferrer">https://peertube.communecter.org/videos/watch/00b4cc60-7d88-4b23-a775-b5bc69a1664e</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="murmuration">Murmuration<a href="#murmuration" class="hash-link" aria-label="Lien direct vers Murmuration" title="Lien direct vers Murmuration">​</a></h3><p>Le protocole Murmurations est conçu pour permettre le partage décentralisé de données. Les exemples les plus évidents de
son utilisation sont les cartes et les répertoires, mais ce n'est qu'un début. Dans ce billet de blog, nous explorons
certains des autres concepts qui pourraient être construits sur Murmurations.</p><p><a href="https://murmurations.network/2022/07/05/what-can-you-build-on-the-murmurations-protocol/" target="_blank" rel="noopener noreferrer">https://murmurations.network/2022/07/05/what-can-you-build-on-the-murmurations-protocol/</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="schemaorg">Schema.org<a href="#schemaorg" class="hash-link" aria-label="Lien direct vers Schema.org" title="Lien direct vers Schema.org">​</a></h3><p>Schema.org est une activité collaborative et communautaire dont la mission est de créer, maintenir et promouvoir des
schémas pour les données structurées sur Internet, sur les pages Web, dans les messages électroniques et au-delà.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="licences-libre-et-open-source">Licences libre et open source<a href="#licences-libre-et-open-source" class="hash-link" aria-label="Lien direct vers Licences libre et open source" title="Lien direct vers Licences libre et open source">​</a></h2><p>Licences open source : Trés bonne entrée en matière dans le monde fabuleux du libre :)</p><p><a href="https://www.youtube.com/watch?v=HGid_PYx0Fo" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=HGid_PYx0Fo</a></p><p>Selon nous, le logiciel et la culture libre restent au cœur des actions de l’association, mais deviennent un moyen, et
non une fin. L’objectif devient alors de réfléchir et mettre en place des actions diverses qui facilitent l’émancipation
des internautes.</p><p><a href="https://framablog.org/2022/10/04/voyage-en-contributopia-ca-nous-a-fait-murir/" target="_blank" rel="noopener noreferrer">https://framablog.org/2022/10/04/voyage-en-contributopia-ca-nous-a-fait-murir/</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="organisations">Organisations<a href="#organisations" class="hash-link" aria-label="Lien direct vers Organisations" title="Lien direct vers Organisations">​</a></h2><p>Le feuilleton en 8 épisodes dont nous entamons aujourd’hui la publication n’est pas un simple mouvement d’humeur contre
certaines dérives du militantisme mais une réflexion de fond sous l’angle de la psychologie sociale, nourrie et
illustrée d’exemples analysés.</p><p><a href="https://framablog.org/2021/07/09/quand-le-militantisme-deconne-injonctions-purete-militante-attaques-1-8/" target="_blank" rel="noopener noreferrer">https://framablog.org/2021/07/09/quand-le-militantisme-deconne-injonctions-purete-militante-attaques-1-8/</a></p><p>Une asso qui se lance, comment ça marche ? Ou plutôt quels écueils ça rencontre, comment on peut les contourner, quel
mode de gouvernance installer… ? Ces questions et bien d’autres qui agitent ses membres jusqu’à les rendre perplexes,
Quentin et ses complices les ont affrontées au sein de l’association Picasoft… :</p><p><a href="https://framablog.org/2022/09/05/de-la-bureau-cratie-a-la-tout-doux-cratie-refonder-la-gouvernance-associative/" target="_blank" rel="noopener noreferrer">https://framablog.org/2022/09/05/de-la-bureau-cratie-a-la-tout-doux-cratie-refonder-la-gouvernance-associative/</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="blockchain">Blockchain<a href="#blockchain" class="hash-link" aria-label="Lien direct vers Blockchain" title="Lien direct vers Blockchain">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="openwallet-et-hyperledger">OpenWallet et Hyperledger<a href="#openwallet-et-hyperledger" class="hash-link" aria-label="Lien direct vers OpenWallet et Hyperledger" title="Lien direct vers OpenWallet et Hyperledger">​</a></h3><p>Un projet modulaire et open-source qui permet aux entreprises de construire en utilisant la blockchain d'une manière qui
leur convient.</p><p>Hyperledger est un projet hébergé par la Fondation Linux pour aider les développeurs et les entreprises à travailler
ensemble pour construire des projets de blockchain collaboratifs. Il s'agit d'un collectif de blockchains et d'outils
open-source que chacun peut utiliser pour créer ses propres grands livres distribués.</p><p><a href="https://www.hyperledger.org/" target="_blank" rel="noopener noreferrer">https://www.hyperledger.org/</a></p><p><a href="https://decrypt.co/resources/hyperledger" target="_blank" rel="noopener noreferrer">https://decrypt.co/resources/hyperledger</a></p><p><a href="https://decrypt.co/109593/linux-foundations-announces-open-source-digital-wallet-initiative-may-include-cryptocurrencies" target="_blank" rel="noopener noreferrer">https://decrypt.co/109593/linux-foundations-announces-open-source-digital-wallet-initiative-may-include-cryptocurrencies</a></p><p>Pour tout comprendre à la blockchain, un très bon article de vulgarisation :</p><p>Patrice, fondateur de la société Unblocked et Himran, en charge de son développement commercial et marketing, ainsi que
Léo, directeur de projet, nous partagent leurs connaissances et leur vision sur la blockchain et les opportunités
qu’elle génère : de l’explosion des NFT à de nouveaux cas d’usage. L’origine de la blockchain</p><p><a href="https://blog.link-value.fr/democratisation-blockchain-potentiel-nft-nouveaux-usages-35c3ac3365f6" target="_blank" rel="noopener noreferrer">https://blog.link-value.fr/democratisation-blockchain-potentiel-nft-nouveaux-usages-35c3ac3365f6</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="technos-bc-">Technos BC :<a href="#technos-bc-" class="hash-link" aria-label="Lien direct vers Technos BC :" title="Lien direct vers Technos BC :">​</a></h3><p>Le Tangle, une nouvelle forme de BC.</p><p>" Le Tangle succède naturellement à la blockchain en tant que prochaine étape d'évolution, car il offre des
fonctionnalités adaptées à la mise en place de solutions de grands livres distribués plus efficaces et plus évolutives."</p><p><a href="https://wiki.iota.org/learn/about-iota/tangle" target="_blank" rel="noopener noreferrer">https://wiki.iota.org/learn/about-iota/tangle</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="plateforme-paiement-et-crypto-actifs">Plateforme paiement et crypto-actifs<a href="#plateforme-paiement-et-crypto-actifs" class="hash-link" aria-label="Lien direct vers Plateforme paiement et crypto-actifs" title="Lien direct vers Plateforme paiement et crypto-actifs">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="utrust">UTRUST<a href="#utrust" class="hash-link" aria-label="Lien direct vers UTRUST" title="Lien direct vers UTRUST">​</a></h4><p>Accepter le paiement en cryptomonnaie (Bitcoin, eGold) en tant qu'artisan, le cas pratique avec
UTRUST : <a href="https://developpeur-freelance.io/blog/acheter-fromage-bitcoin/" target="_blank" rel="noopener noreferrer">https://developpeur-freelance.io/blog/acheter-fromage-bitcoin/</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="crypto-scepticisme">Crypto scepticisme<a href="#crypto-scepticisme" class="hash-link" aria-label="Lien direct vers Crypto scepticisme" title="Lien direct vers Crypto scepticisme">​</a></h2><p>Articles intéressants et critiques du monde des crypto-monnaies (crypto-actif) :</p><p><a href="https://web3isgoinggreat.com" target="_blank" rel="noopener noreferrer">https://web3isgoinggreat.com</a></p><p><a href="https://www.numerama.com/tech/1128614-la-crypto-reunit-les-meilleurs-reveurs-et-les-pires-escrocs-quand-meme-les-fans-de-cryptos-quittent-le-navire.html" target="_blank" rel="noopener noreferrer">https://www.numerama.com/tech/1128614-la-crypto-reunit-les-meilleurs-reveurs-et-les-pires-escrocs-quand-meme-les-fans-de-cryptos-quittent-le-navire.html</a></p><p><a href="https://www.lemonde.fr/pixels/article/2022/09/07/au-crypto-policy-symposium-les-sceptiques-de-la-cryptoeconomie-entrent-en-resistance_6140539_4408996.html" target="_blank" rel="noopener noreferrer">https://www.lemonde.fr/pixels/article/2022/09/07/au-crypto-policy-symposium-les-sceptiques-de-la-cryptoeconomie-entrent-en-resistance_6140539_4408996.html</a></p><p><a href="https://www.numerama.com/tech/1006000-bill-gates-demonte-les-nft.html" target="_blank" rel="noopener noreferrer">https://www.numerama.com/tech/1006000-bill-gates-demonte-les-nft.html</a></p><p><a href="https://www.nextinpact.com/article/69429/1-500-informaticiens-crypto-sceptiques-interpellent-congres-americain" target="_blank" rel="noopener noreferrer">https://www.nextinpact.com/article/69429/1-500-informaticiens-crypto-sceptiques-interpellent-congres-americain</a></p><p><a href="https://fredcavazza.net/2022/06/23/le-progres-ne-viendra-pas-des-nouvelles-technologies-mais-de-levolution-des-usages/" target="_blank" rel="noopener noreferrer">https://fredcavazza.net/2022/06/23/le-progres-ne-viendra-pas-des-nouvelles-technologies-mais-de-levolution-des-usages/</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="crypto-enthousiastes">Crypto Enthousiastes<a href="#crypto-enthousiastes" class="hash-link" aria-label="Lien direct vers Crypto Enthousiastes" title="Lien direct vers Crypto Enthousiastes">​</a></h2><p>Articles intéréssants et enthousiastes sur les crypto actifs :</p><p><a href="https://www.nextinpact.com/article/69454/le-plaidoyer-pro-crypto-dun-cryptographe-emerite" target="_blank" rel="noopener noreferrer">https://www.nextinpact.com/article/69454/le-plaidoyer-pro-crypto-dun-cryptographe-emerite</a></p><p><a href="https://www.numerama.com/tech/1058914-elizabeth-stark-lactiviste-qui-veut-democratiser-le-bitcoin.html" target="_blank" rel="noopener noreferrer">https://www.numerama.com/tech/1058914-elizabeth-stark-lactiviste-qui-veut-democratiser-le-bitcoin.html</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sur-les-gafam">Sur les GAFAM<a href="#sur-les-gafam" class="hash-link" aria-label="Lien direct vers Sur les GAFAM" title="Lien direct vers Sur les GAFAM">​</a></h2><p>On le sait bien : Google se permet de tranquillement lire tous les mails qui passent sur ses serveurs, ceux des boîtes
Gmail ainsi que ceux adressés à des boîtes Gmail…</p><p>En général, le but est de refourguer de la publicité ciblée. Mais pas seulement. Une petite histoire (vraie) qui montre
que les conséquences peuvent être autrement plus dramatiques…</p><p><a href="https://framablog.org/2022/09/09/google-lespion-le-plus-con-du-monde/" target="_blank" rel="noopener noreferrer">https://framablog.org/2022/09/09/google-lespion-le-plus-con-du-monde/</a></p>]]></content:encoded>
            <category>cashless</category>
            <category>fédération</category>
            <category>portefeuille</category>
            <category>wallet</category>
            <category>liens utiles</category>
        </item>
    </channel>
</rss>